{"path":".obsidian/plugins/text-extractor/cache/209cec2ba7b95a17ade36115acff5243.json","text":"2. Complete the following recurrence to solve the canSplit problem for non-empty strings in such a way that we require only linear table entries (in the length of str) to convert this to dynamic programming. [6 marks] True if isWord(str) is true canSplit(str) = i â‚¬ the integers 1 up to (and including) such that: - otherwise 3. Complete the following dynamic programming pseudocode function to solve the canSplit problem based on the recurrence above. [6 marks]| function canSplit(str): n = length(str) // Set up the array: let Table be an array with indexes 1 .. __________ // FILL IN THE BLANK fori= _______ // FILL IN THE BLANK if ot // FILL IN THE BLANK // FILL IN THE \"THEN\" CASE else: // FILL IN THE \"ELSE\" CASE return _________________ // FILL IN THE BLANK","libVersion":"0.2.1","langs":"eng"}