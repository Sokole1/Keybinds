{"path":".obsidian/plugins/text-extractor/cache/81ea8b90aea52f89d08d6c5a010a2438.json","text":"CPSC 302, Fall 2023, Assignment 4 Released Tuesday, October 24, 2023 Due Wednesday, November 1, 2023 Friday, November 3, 2023, 11:59pm Instructions: Please show all your work. Submit your assignment PDF via Gradescope, and code (Matlabm-files) via Canvas. Ensure that you properly select the correct pages for each question. Accompanying code should be submitted to Canvas as a zipped file. Ensure that any code snip- pets/output figures from your Matlab scripts are included in your Gradescope PDF. If you have any questions about the submission procedure or the assignment that may be of general interest to all students of the course, feel free to write to Piazza. Late submissions: You may hand in your assignment up to 24 hours late, for a penalty of 10% in absolute terms. For example, if your graded assignment is 83% and you handed in one day late, your final grade in the assignment is 73%. The penalty would be recorded only on Canvas, not on Gradescope; your Canvas grade is the one that would count. Assignments are not accepted later than Saturday, November 4, 11:59pm. 1. Load data for this question from the Assignment wepbage, as follows. Download the file Q1data.mat to your working folder, and within your Matlab session, run the three commands below and see the expected output: >> clear all >> load Q1data >> whos Name Size Bytes Class Attributes f 1x200 1600 double t 1x200 1600 double This will confirm that you have two 200-long row vectors t and f, representing a discrete function f (t) on the interval [0, 2]. The figure below show how it looks, using plot(t,f). 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 t -1 -0.8 -0.6 -0.4 -0.2 0 0.2 0.4 0.6 0.8 1f(t) Data for Assignment 4 Question 1 This data represents physics lab experiments, and we are interested only in the slow-scale trend of this function, because the highly oscillatory component represents non-physical noise. We seek a low-degree polynomial that best approximates f (t) in the least-squares sense. (a) Write down the corresponding least-squares problem, for a given degree k. Make sure to state clearly the entries of any matrices and vectors that are involved in the computation. (b) Compute the least-squares approximating polynomials pk(t) of degrees 1 through 12 and plot groups of three of them together with f , as follows: generate four plots, one with f and the polynomials of degrees k = 1, 2, 3; the next with f and the polynomials of degrees k = 4, 5, 6, and then two more plots with f and the polynomials of degrees k = 7, 8, 9 and k = 10, 11, 12. Use the command hold to generate multiple graphs in the same plot, and the command legend to show clearly what graph belongs to which values of k. Write a Matlab function to construct the matrices and vectors involved, solve the corresponding least-squares problems using backslash, and plot the required graphs. Print out the values of the coefficients of the polynomials. You may consider writing a separate script that would serve as a driver, calling your function and taking care of generating the output. You may use Matlab’s built-in commands polyfit and polyval to check your work, but you are required to write your own function, where the only built-in command that you may use is backslash. Determine whether you are seeing a progressive improvement in the quality of the approximations as you increase the polynomial degrees. Include the four graphs in your submission. There is no need to provide much or any additional commentary - let the graphs speak for themselves. (c) A student who has not taken CPSC 302 has become quite enthusiastic about the ob- servations in part (b) and has decided to go all out and try polynomials of degrees k = 40, 50, 60 as well. Reproduce the computations of that student for those three polynomials, and give two possible reasons why further increasing the degrees of the polynomials does not necessarily produce better results. 2 2. Suppose we seek an approximation of the form u(t) = γ1eγ2t+γ3t2 for a data-fitting problem, where γ1, γ2, and γ3 are constants. Assume given data (t1, z1), (t2, z2), . . . , (tm, zm), where zi > 0, i = 1, 2, . . . , m, and m > 0. (a) Explain briefly why the linear least-squares problem as we have formulated it cannot be directly applied to find this u(t). (b) Considering instead v(t) = ln u(t) = (ln γ1) + γ2t + γ3t2, it makes sense to define bi = ln zi, i = 1, 2, . . . , m, and then find coefficients x1, x2, and x3 such that v(t) = x1 + x2t + x3t2 is the best least-squares fit for the data (t1, b1), (t2, b2), . . . , (tm, bm). Using this method, find u(t) for the data (using any solution technique you’d like). i 1 2 3 4 ti 0.0 1.0 2.0 3.0 zi e0.1 e0.5 e2 e3.5 Plot the graph of the approximating function on the interval [0., 3], along with the datapoints; the Matlab code on pre-lecture slide 13 may help you get that going. 3. Consider the least-squares problem min ⃗x ∥⃗b − A⃗x∥2, where we know that A is ill-conditioned. A regularization approach replaces the normal equations by the modified, better conditioned system (AT A + γI)⃗xγ = AT⃗b, where γ > 0 is a parameter. (a) Show that κ2 2(A) ≥ κ2(AT A + γI). (b) Reformulate the equations for ⃗xγ as a linear least-squares problem. (c) Show that ∥⃗xγ∥2 ≤ ∥⃗x∥2. (d) Find a bound for the relative error ∥⃗x−⃗xγ ∥2 ∥⃗x∥2 in terms of either an extremal singular value of the matrix A. State a sufficient condition on the value of γ that would guarantee that the relative error is bounded below a given value ε. 4. No longer required. Download the m-files house.m and lsol.m, which are provided on the Assignment webpage, and modify them as necessary to do as follows. Consider the example provided in detail in pre-lecture slides 9-14 of Chapter 6. Repeat the steps of Example 6.11 in the textbook, this time applied to the 7 × 3 example of the slides rather than the 5 × 3 matrix of the textbook (which is introduced in Example 6.2). Compute the QR decomposition of the matrix via Householder reflections and solve the least-squares problem showing all interim steps the same way it is done in Example 6.11. Print all the reflection vectors and the matrices Q(1), Q(2), and Q(3), as well as the final factors Q and R and the solution ⃗x of the least-squares problem. You may use Matlab’s backslash and QR commands to confirm that you have obtained correct results. 3","libVersion":"0.2.1","langs":""}