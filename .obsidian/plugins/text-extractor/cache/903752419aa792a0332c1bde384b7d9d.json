{"path":".obsidian/plugins/text-extractor/cache/903752419aa792a0332c1bde384b7d9d.json","text":"[ the instructors' answer, where instrctors collectively consinct a singl answor This seems good to me. As a bonus, you should also try to be comfortable with converting a problem like this into a graph problem and showing it that way. This is more like what you saw in tutorial 3 with the paraliel assignment problem and like the snakes and ladders problem. If you want try it yourself, but here's my (informal) working for it: Start by translating this into a graph G, in particular a directed graph where e = (u1,2) € G — v; < vy Add an edge from each element in R to the next element, and for each tuple add an edge from the frst element in the tuple to the second, and from the second to the third. From here, if our graph has a cycle then we have an inconsistency, otherwise the graph is consistent. We can detect cycles in O(V + E) time with BFS. We have added 1 edge per element in R, and 2 per tuple, which mean m & 3n = O(n), so the total algorithm is O(n). thanks! |3 Updated 2 days ago by Hany Sadiir","libVersion":"0.2.1","langs":"eng"}