{"path":".obsidian/plugins/text-extractor/cache/868a77d7af9c821e68e18299d8478771.json","text":"1 Strategically Placed Krispy Kremes UBC Rec student leaders are planning their next fundraiser, and are seeking your help in identifying strategic locations to set up their stands of Krispy Kremes. They have a map showing n locations of buildings and outdoor spots on campus. Their k stands need to be set up in the outdoor spots. They want you to select k spots such that the maximum distance from any of the n locations to a stand is as small as possible. Formally an instance of the Strategically Placed Krispy Kremes optimization problem is a set V' of size n (the locations), a subset S of V' (the outdoor locations), and an integer k, 1 <k <|S], as well as a symmetric matrix d[1..n][1..n] of distances between each pair of locations. The optimization problem is to find a subset S’ C S of size k, so as to minimize . o/ I&a‘}(?ellsg{d(s, v)|se S’} The corresponding Strategically Placed Krispy Kremes decision problem, which we’ll call SPKK, is as follows. An instance of SPKK has a set V' of size n, a subset S of V, an integer k, 1 < k < |S|, and a symmetric matrix d[1..n][1..n], plus an additional nonnegative integer b. The problem is to determine if there is a subset S’ C S of size k, such that in{d| €S} <b. 1 max min{dfv][s] | s € §'} < (1) 1. Show that the SPKK problem is in NP. 2. Suppose that, in specifying the decision problem, we replace the ”<” in (2) with ”=\", i.e., in{d| €S’} =b. 2 max min{dfv][s] | s € §'} 2 Call this new decision problem variant SPKK’. Can we easily adapt our certification algorithm from part 1 to SPKK'?","libVersion":"0.2.1","langs":"eng"}