{"path":".obsidian/plugins/text-extractor/cache/6473d4c24c018905546ed72ec83f07f1.json","text":"William Kang Mathematics 318 Homework 6 77253938 Question 1 Question 2 1 William Kang Mathematics 318 Homework 6 77253938 Question 3 2 William Kang Mathematics 318 Homework 6 77253938 3 William Kang Mathematics 318 Homework 6 77253938 Question 4 4 William Kang Mathematics 318 Homework 6 77253938 Question 5 a)Output:0.34132037159771340.34114345255034780.3417973687503027 import numpy as np def fx ( x ) : return 1 / ( np . sqrt ( 2 * np . pi ) ) * np . exp ( - ( x * * 2 ) / 2 ) for _ in range ( 3 ) : repeats = 40000 Us = np . random . uniform ( 0 , 1 , repeats ) fUs = fx ( Us ) print ( np . mean ( fUs ) ) b)It is reasonable because the entire integral is defined over [0, 1]. Taking samples from the 1 x 1 square will cover the area of the square. Then counting how many are under the integral should approximate the ratio between the area of the integral and the square area. Then since we take a large number of samples, our estimation of the proportion is more accurate. 5 William Kang Mathematics 318 Homework 6 77253938 c)Output:0.34040.34160.341475 import numpy as np def fx ( x ) : return 1 / ( np . sqrt ( 2 * np . pi ) ) * np . exp ( - ( x * * 2 ) / 2 ) for _ in range ( 3 ) : repeats = 40000 xs = np . random . uniform ( 0 , 1 , repeats ) fxs = fx ( xs ) ys = np . random . uniform ( 0 , 1 , repeats ) count = 0 for y , f_y in zip ( ys , fxs ) : if y <= f_y : count += 1 print ( count / repeats ) 6","libVersion":"0.2.1","langs":""}