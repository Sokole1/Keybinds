{"path":".obsidian/plugins/text-extractor/cache/68b36b1cb29a131c3b51bc6886c9c92a.json","text":"1. [0 marks] I hereby pledge that I have read and will abide by the rules, regulations, and expectations set out in the Academic Calendar, with particular attention paid to: ‹ The Student Declaration ‹ The Academic Honesty and Standards ‹ The Student Conduct During Examinations ‹ And any special rules for conduct as set out by the examiner. I a˚rm that I will not give or receive any unauthorized help on this examination, that all work will be my own, and that I will abide by any special rules for conduct set out by the examiner. True False 2. [8 marks] Housing problems Finding housing in a small town can be di˚cult. In a small town in northern BC, there are n landlords with an apartment to rent, and n renters looking for a place to live. Each renter is willing to pay a di˙erent rent amount for each apartment (presumably one is willing to pay more money for a nicer apartment than for a shabby one), and would prefer a fancier apartment even though it's more expensive. a. [3 marks] De˝ne what it would be appropriate to call an instability in this situation. Solution : An instabiliy is a renter r and a landlord l where ‹ r likes l's apartment better than the one r is renting. ‹ r is willing to pay more for l's apartment than l's current tenant. If this situation occurs, then l will want to kick its current tenant out, in order for r to move in. b. Describe an e˚cient algorithm to decide which renter will rent which apartment. Solution : We reduce an instance of the housing problem to the stable matching problem as follows: ‹ The set L of landlords and the set R of renters/tenants are the two sets of elements. ‹ The preference list for a landlord l contains potential tenants in decreasing order of the rent they are willing to pay. ‹ The preference list of a tenant r contains the potential landlords in decreasing order of the amount that r is willing to pay for each landlord's apartment (that is, with the apartments r likes best at the front of the list, and those r likes the least at the back of the list). Then we run the Gale-Shapley algorithm on the resulting instance of the stable matching problem. 3. [8 marks] Using a recursion tree, give tight ( Θ) upper and lower bounds on the function T (n) de˝ned by the following recurrence relation: T (n) = { 4T (n/4) + 9T (n/9) + n1.5 if n ≥ 9 Θ(1) if n ≤ 8 1 Solution : Here are the ˝rst three levels of the recursion tree. The root does n1.5 work. Its children do 4 × n1.5/8 + 9 × n1.5/27 = n1.5/2 + n1.5/3 = (5/6)n1.5 work. The nodes on level 2 do 4 × 4 × n1.5/43 + 4 × 9 × n1.5/63 + 9 × 4 × n1.5/6 3 + 9 × 9 × n1.5/9 3 = (5/6) 2n1.5 and so on. The total work being done is thus a decreasing geometric series, and so T (n) ≤ log4 n∑ i=0 (5/6) in1.5 ≤ ∞∑ i=0(5/6) in1.5 = 1 1 − 5/6 n1.5 = 6n1.5 which means that T (n) ∈ O(n1.5). By looking at the root of the tree, we also see that T (n) ∈ Ω(n1.5). Therefore T (n) ∈ Θ(n1.5). 4. [8 marks] In this question, we consider once again the Dominating Set problem from Tutorial 3. Recall that this problem is de˝ned as follows: Given a graph G = (V, E) and an integer k, we want to ˝nd a subset W of V such that |W | ≤ k, and every elements of V − W is joined by an edge to an element of W . Here is a reduction from the Dominating Set problem to the Boolean Satis˝ability problem: (a) For each pair vi, vi′ of vertices of G, and integer j such that 1 ≤ j ≤ k, we add the clause X i,j ∨X i′,j to the instance of SAT. (b) For each vertex vi of G ‹ Assume the neighbours of vi are vi1, vi2, . . . vit. ‹ Let us denote by Yi,j the expression Xi,j ∨ Xi1,j ∨ Xi2,j ∨ Xi3,j ∨ · · · ∨ Xit,j. ‹ We add the clause Yi,1 ∨ Yi,2 ∨ · · · ∨ Yi,k to the instance of SAT. For instance, if v1 has neighbours v5 and v8, and k = 3, then we would add the clause X1,1 ∨ X5,1 ∨ X8,1 ∨ X1,2 ∨ X5,2 ∨ X8,2 ∨ X1,3 ∨ X5,3 ∨ X8,3 to the instance of SAT. 2 a. [4 marks] Suppose the graph G has a dominating set W that contains at most k vertices. Show how to set the values of the variables in the instance of SAT to make every clause evaluate to True. Solution : Suppose that G has a dominating set W with at most k vertices {vi1, vi2, . . . vit} where t ≤ k. In the instance of SAT, we assign the value True to the variables Xi1,1, Xi2,2, Xi3,3, . . . Xit,t. We assign the value False to every other variable. Because at most one of X1,j, X2,j, . . . Xi,j is true for any value of j such that 1 ≤ j ≤ k, the clauses of the form X i,j ∨ X i′,j all evaluate to True . Because W is a dominating set, for every vertex vi of G, either vi ∈ W , or a neighbour of vi is in W . Thus one of variables Xa,j corresponding to some vertex va that's either vi or a neighbour of vi will be set to True . This means the clause Yi,1 ∨ Yi,2 ∨ · · · ∨ Yi,k generated for vi evaluates to True. b. [4 marks] Suppose that it is possible to assign the value True or False to each variable in the instance of SAT in a way that makes every clause evaluate to True. Show why this means that the graph G has a dominating set with at most k vertices. Solution : Suppose that there is a way to assign values to the variables in the instance of SAT that makes every clause True . We construct a subset W of V as follows: W = {vi ∈ V | Xi,1 ∨ Xi,2 ∨ Xi,k}. We need to prove that W contains at most k vertices, and that W is a dominating set of G. For the ˝rst claim, observe that because every clause of the form X i,j ∨ X i′,j in the instance of SAT evaluates to True , at most one variable Xi,j can have the value True for any given value of j. So at most k variables of the instance of SAT can have the value True , which means that W contains at most k vertices 1 . For the second claim, consider a vertex vi of G. Because the clause Yi,1 ∨ Yi,2 ∨ · · · ∨ Yi,k, in the instance of SAT evaluates to True , one of the variables Xa,j associated with a vertex va that's either vi or one of its neighbours must be true. Thus either vi ∈ W , or one of vi's neighbours belongs to W . Thus W is a dominating set for G. 1 This is word for word the ˝rst paragraph of the solution to question 3e of assignment 1, except that the set of vertices is named W instead of V ′. 3","libVersion":"0.2.1","langs":""}