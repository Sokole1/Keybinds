{"path":".obsidian/plugins/text-extractor/cache/c26e47017dbc824a54e7a6e97b22cf24.json","text":"2 An Algorithm for Finding the Median Suppose that you want to find the median number in an array of length n. The algorithm below can be generalized to find the element of rank k, i.e., the kth largest element in an array, for any 1 < k < n. (Note: the lower the rank, the larger the element.) The median is the element of rank [n/2]. For example, the median in the array [10, 3, 5, 18, 1000, 2, 100, 11, 14] is the element of rank 5 (or 5th largest element), namely 11. 1. In your specific recursion tree above, mark the nodes in which the median (11) appears. (The first of these is the root.) 2. Look at the second recursive call you markedâ€”the one below the root. 11 is not the median of the array in that recursive call! (a) In this array, what is the median? (b) In this array, what is the rank of the median? (c) In this array, what is the rank of 11?7 (d) How does the rank of 11 in this array relate to the rank of 11 in the original array (at the root)? Why does this relationship hold?","libVersion":"0.2.1","langs":"eng"}