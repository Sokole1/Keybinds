{"path":".obsidian/plugins/text-extractor/cache/d7128ab0c61c17351e93af4c4218b18b.json","text":"4 Dealing with NP-Completeness Most Computer Scientists think \"P # NP\". If that’s true, then there is no correct, deterministic algorithm for any NP-complete problem that runs in polynomial time. Specifically: if a problem is NP-complete, it’s hopeless to write an algorithm that scales to arbitrarily large problem sizes and definitely, precisely solves every possible instance of those sizes correctly for exactly that problem. Should we throw our hands up in the air and give up on solving NP-complete problems? List as many ways as you can think of to \"get around\" an NP-complete problem.","libVersion":"0.2.1","langs":"eng"}