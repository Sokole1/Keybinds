{"path":".obsidian/plugins/text-extractor/cache/33612897af6da9b3caf6d646baa5db76.json","text":"CPSC 320: Memoization and Dynamic Programming I * You want to make change in the world, but to get started, you're just ... making change. You have an unlimited supply of quarters (25 cents), dimes (10 cents), nickels (5 cents), and pennies (1 cent, once upon a time). You want to make change for n > 0 cents using the minimum number of coins. 1 Build intuition through examples. 1. Here is an optimal greedy algorithm to make change. Try it on at least one instance. function GREEDY-CHANGE(n) while n > 0 do if n > 25 then give a quarter and reduce n by 25 else if n > 10 then give a dime and reduce n by 10 else if n > 5 then give a nickel and reduce n by 5 else give a penny and reduce n by 1 2. A few years back, the Canadian government eliminated the penny. Imagine the Canadian government accidentally eliminated the nickel rather than the penny. That is, assume you have an unlimited supply of quarters, dimes, and pennies, but no nickels. Adapt algorithm GREEDY-CHANGE for the case where the nickel is eliminated, by changing the code above. Then see if you can find a counterexample to its correctness.","libVersion":"0.2.1","langs":"eng"}