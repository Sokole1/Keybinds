{"path":".obsidian/plugins/text-extractor/cache/753ab6e14442c36c47b183097e7cf064.json","text":"CP S C 3 1 3 Y8 6 I n t r o d u c t i o n • To p i c s • Pu t t i n g i t a l l t o g e t h e r i n a p r o g r a m • Lear ni ng O bj ect i ves • Us e t h e s i m u l a t o r t o e x e c u t e y 8 6 p r o g r a m s 1 Mu c h o f t h i s ma t e r i a l i s d e r i v e d f r o m t h a t o f B r y a n t a n d O ’ H a l l o r a n . Ex a m p l e Pr o g r a m ( 1 ) # Initialize registers 1. irmovq 0xFACE, % rax 2. irmovq 0xCAFE, % rbx # Swap values 3. rrmovq % rax , % rcx 4. rrmovq % rbx , % rax 5. rrmovq % rcx , % rbx 6. halt CP S C 3 1 3 2 Ex a m p l e Pr o g r a m ( 2 ) CP S C 3 1 3 3 # Load data from memory 1. irmovq a, %r11 2. mrmovq 0(%r11), % rax 3. mrmovq 8(%r11), % rbx # Write values back to # opposite locations 4. rmmovq % rax , 8(%r11) 5. rmmovq % rbx , 0(%r11) 6. halt 7. .pos 0x100 8. a: .quad 0xFACE 9. b: .quad 0xCAFE","libVersion":"0.2.1","langs":""}