{"path":".obsidian/plugins/text-extractor/cache/c22903e34d3eecb01b4089ca18475bd3.json","text":"DETECTION OF NEWS WRITTEN BY THE CHATGPT THROUGH AUTHORSHIP ATTRIBUTION PERFORMED BY A BIDIRECTIONAL LSTM MODEL A PREPRINT Amanda Ferrari Iaquinta Department of Electrical Engineering IFSP - Federal Institute of Education, Science and Technology of São Paulo Piracicaba - SP - Brazil a.ferrariiaquinta@gmail.com Gustavo Voltani von Atzingen IFSP - Federal Institute of Education, Science and Technology of São Paulo Rua, Av. Diácono Jair de Oliveira, 1005 Piracicaba - SP - Brazil gustavo.von@ifsp.edu.br October 26, 2023 ABSTRACT The large language based-model chatbot ChatGPT gained a lot of popularity since its launch and has been used in a wide range of situations. This research centers around a particular situation, when the ChatGPT is used to produce news that will be consumed by the population, causing the facilitation in the production of fake news, spread of misinformation and lack of trust in news sources. Aware of these problems, this research aims to build an artificial intelligence model capable of performing authorship attribution on news articles, identifying the ones written by the ChatGPT. To achieve this goal, a dataset containing equal amounts of human and ChatGPT written news was assembled and different natural processing language techniques were used to extract features from it that were used to train, validate and test three models built with different techniques. The best performance was produced by the Bidirectional Long Short Term Memory (LSTM) Neural Network model, achiving 91.57% accuracy when tested against the data from the testing set. Keywords ChatGPT. Authorship attribution. NLP. LSTM. Deep learning. 1 Introduction Large Language Models (LLMs) are a category of deep learning algorithms trained to understand and generate human language [1]. Among other areas, these algorithms show high efficiency when applied to problems involving language processing due to the fact that they use a specific neural network architecture created in 2017, called Transformers [2]. Since its creation, this architecture has enabled great advances in natural language processing (NLP) studies and techniques, but it was from the launch of the large language based-model chatbot ChatGPT, in November 2022, that it gained prominence. This fact can be visualized on Figure 1 that shows the worldwide Google search interest [3] relative to the term ‘Large Language Models’ between January 2017 and September 2023. The y-axis represents the interest relative to the highest point on the chart, with a value of 100 representing the peak popularity of the term. Compared to previous months, it is possible to note a rapid growth in interest from November 2022 until September 2023, which is the month this article was written. The mentioned chatbot is a natural language processing tool based on the transformer GPT (Generative Pretrained Transformer), trained to have human-like conversations and provide text solutions for the most diverse questions and A PREPRINT - OCTOBER 26, 2023 Figure 1: LLMs world Google search interest. requests [4], being able to write human-like texts, essays, news articles, documents, e-mails, fragments of code for computers and many other textual constructions. As a result of its training, this tool can be used in a wide range of situations [5], [6], [7] causing positive and negative impacts. This research centers around a particular situation, when the ChatGPT is used to produce news that will be consumed by the population, causing two main problems. The first problem is the facilitation in the production of fake news due to the fact that the generated text is guided and based on the request provided by the user that may or may not contain false information that, until the date of this study, will not be fact checked by the chatbot before writing a news about it. The second problem is a direct result from the first, consisting of the fact that people end up losing confidence in the information they read, not knowing which source to trust, leading to chaos and misinformation [8]. The mentioned problems are reinforced by the result of a study carried out by this research and explained in the following sections, which showed that the degree of sophistication of the textual productions generated by the chatbot is so high that it is extremely difficult for the human being to differentiate whether or not a text was written by the ChatGPT. Concerned with the exposed situation, this research uses machine learning and deep learning techniques to perform authorship attribution on news and identify when a news article was written by the ChatGPT. The authorship attribution (AA) task consists of correctly assigning an author, from a specific set, to a text of unknown authorship, given sample texts produced by the possible authors [9]. Successfully completing this task is of extreme importance in many applications such as plagiarism detection, forensic investigations and literature and history studies [10], [6]. The general approach used to execute this task is by extracting different stylometric features from the sample texts and using some classifier algorithm to recognize patterns and make authorship attributions based on the extracted features [9]. Stylometric features can be defined as information contained in a text that can be used to characterize and differentiate its author. As studied by [11], these features can be classified in five groups: lexical, character, syntactic, semantic and application-specific. Concisely, the lexical group views a text as a sequence of tokens and the only requirement to extract this type of feature is a previous text tokenization, while the character group views a text as a sequence of characters and the features are extracted from a character level. The syntactic group analyzes the syntactic structures that form a text, relying on the tendency of authors to use similar syntactic patterns, and the semantic group consists of features that consider the context, emotions, and sentiments present in a text. Lastly the application-specific group consists of features that can only be extracted from texts that have specific contents. Many different classifier algorithms were used in the literature to learn patterns present in extracted features and perform AA. [12] presented a Convolutional Neural Network (CNN) model that uses a sequence of character n-grams 2 A PREPRINT - OCTOBER 26, 2023 as input for AA of tweets using a dataset with approximately 9.000 Twitter users with up to 1.000 tweets each; [13] also proposed a CNN approach but used different feature extraction processes to perform AA in a dataset containing articles from 880 different authors divided in segments of 1.500 words; [14] used Logistic Regression and Support Vector Machine (SVM) techniques to identify changes in the writing style of 7 authors of novels; [15] used Gated Recurrent Unit (GRU) network and Long Short Term Memory (LSTM) network to perform AA using the Reuters 50 50 news dataset and Gutenberg story dataset; [16] tested different LSTM architectures to perform AA on tweets and [17] proposed a Syntactic Recurrent Neural Network model using both CNN and LSTM techniques to perform AA using a closed dataset containing novels from 14 different authors. Different from the previous studies and following the same line of research of this paper, [18] tested two deep classifiers and a logistic regression model to differentiate answers written by the ChatGPT from the ones written by humans and [19] made an assessment of the most recent techniques in ChatGPT writing detection. In view of the above, this research aims to build an artificial intelligence classification model capable of performing authorship attribution on news articles, identifying the ones written by the ChatGPT. To achieve this goal, different machine learning and deep learning algorithms were used along with various stylometric feature extraction processes. 2 Methodology A dataset containing equal amounts of human and ChatGPT written news was assembled through news gathering of online news platforms and news generation with the ChatGPT API. The collected news were subjected to a series of different natural language processing (NLP) operations aiming to produce meaningful data that was used to train, validate and test the artificial intelligence classifiers proposed in this paper. Three classification models were built using different techniques and compared in order to find the one that best suited the problem introduced above. The code produced to execute the process and models described in this paper is available on a public repository [20] on GitHub. The dataset assembly process was performed in three steps. In the first step, three well known and reliable news sites were selected: BBC News, TechCrunch and The Verge. For each site, data scraping was performed using a series of Python libraries to obtain the human written news part of the dataset. Three rounds of news scraping were performed, collecting news written in English and published in the periods of January 2022 to June 2022 or January 2023 to April 2023. After each round, the collected news were reviewed by humans to ensure that the content was correctly scraped and did not contain external text such as advertisements and readers comments. The scrapping process was set to search for technology themed news to avoid that the theme became a bias later on the analysis. A total of 623 news articles were collected, 203 from BBC, 252 from Tech Crunch and 168 from The Verge. In the second step, the scraped news articles along with the OpenAI ChatGPT 3.5 API were used to obtain the ChatGPT part of the dataset. Two interactions with the ChatGPT API occurred for each scrapped news article. First, a summary was requested for each news article. The returned summary was then used in the second interaction requesting a news article based on that summary. The API ‘memory’ feature was not used, this way the news article produced by the ChatGPT was based only in the given summary, having no relation with the news article present in the previous summary request. After this process, each human written news article had a ChatGPT written version. The Python code snippet below shows the exact queries used to interact with the ChatGPT 3.5 API. Line 2 contains the query used in the first interaction and line 4 contains the query used in the second interaction. The variables ’text’ and ’text_tokens’ present in the code contain a collected news article written by humans and its tokenized version respectively and variable ’summary’ contains the news article summary generated in the first interaction. To prevent that the news size became a bias on the classification process, the second interaction limited the ChatGPT news version to have a size in words within a range of plus 50 words or minus 50 words from the size of the human written news version, as shown in the code. 1 2 summary_query = \" Summarize in details the following news article . News : \" + text 3 4 news_article_query = \" Write a news story based on the following summary containing a maximum of \" + str ( len ( text_tokens ) + 50) + \" words and a minimum of \" + str ( len ( text_tokens ) - 50) + \" words and entitled : \" + title + \" . Summary : \" + summary The third and final step was dividing the dataset in three subsets named train, validation and test. The train subset contains 70% of the dataset data with 870 news and the validation and test subsets each have 15% of the dataset data with 186 and 190 news respectively. The separation was performed randomly, not implying that the human and ChatGPT versions of a news article stayed in the same set. The violin plot of Figure 2 depicts the news articles size distribution for each data subset. For this depiction, the news articles were tokenized using the NLTK tokenizer and the 3 A PREPRINT - OCTOBER 26, 2023 Figure 2: News articles size distribution. number of tokens of each news article was considered as its size. Respectively the train, validation and test subsets have medians of 613.5, 601 and 626.5 tokens. Once the dataset was assembled and divided, two different data treatments were performed. Both treatments described below used the part-of-speech (POS) tagging technique that is a widely used process for feature extraction on AA problems [13], [17], [21]. This process consists of assigning a grammatical category to a given word using contextual information to make the correct classification. Each category is represented by a tag that is formed by one or more capital characters and the number of possible categories varies according to the chosen classifier and the degree of specification intended. For this research, the NLTK library [4] POS tag classifier was used, having 226 possible categories. Treatment number 1 produced the data used to train, validate and test the first two proposed models that will be described below, and consisted in extracting lexical and syntactic features from the news articles. After studying and evaluating many stylometric features present and not present in the literature [9], [10], [22], [23], [24], 13 features were extracted from every news article and are described in Table 1. Initially, the news articles were tokenized using NLTK library tokenizer and the first 4 features present on Table 1, classified as statisticals, were extracted directly from the raw tokenized text. It is important to address that for the extraction of the statistical feature number 2 from Table 1, named ‘Stopwords ratio’, the english stopwords set from the NLTK python library was used to identify this type of word, that consists of the most frequent words used in a given language. Following the tokenization, the part-of-speech (POS) tagging process was performed on the tokenized data and after this process each news article no longer corresponded to tokenized raw text but to a sequence of POS tags from which 9 features were extracted and are also described in Table 1. Upon completion of this treatment, each news article was represented by a one dimensional array of 13 numeric features, each one being the value of a feature presented in Table 1, as exemplified bellow: ndarray([0.44308452, 0.34832337, 0.1956427, 0.53335732, 0.61453386, 0.18496241, 0.24151003, 0.47051729, 0.63403149, 0.48049792, 0.5156211, 0.11363636, 0.5]) Treatment number 2 produced the data used to train, validate and test the third proposed model that will be described below. Initially, the data was tokenized and POS tagged in the same way as described in treatment number 1. Each POS tag belonging to a sequence was then converted to an integer so that each tag sequence corresponded to a one dimension array of integers that would then go through a sequence filling process. In this process, all arrays were brought to the same size of 200 by, if necessary, filling them with zeros to the left until the desired size was reached. Once performed 4 A PREPRINT - OCTOBER 26, 2023 the steps described, each news article was represented by a one dimensional array of 200 integer numbers as exemplified below: ndarray([3, 4, 9, ..., 9, 12]) Table 1: Features extracted with treatment number 1. Feature Description 1. Ponctuation ratio Quantity of punctuation tokens divided by total number of tokens. All characters present in the following set were considered punctuation: !\"#$%&´()*+,-./:;<=>?@[\\]ˆ _`{|}∼ 2. Stopwords ratio Quantity of tokens that correspond to stopwords divided by total number of tokens. 3. Average number of tokens per sentence Number of tokens divided by the total number of sentences. 4. Average token length Number of characters divided by the total number of tokens. 5-1. Adjective ratio Number of tags indicating adjective divided by the total number of POS tags. 6-2. Nouns ratio Number of POS tags indicating nouns divided by the total number of POS tags. 7-3. Conjunction ratio Number of tags indicating conjunctions divided by the total number of POS tags. 8-4. Preposition ratio Number of tags indicating prepositions divided by the total number of POS tags. 9-5. Adverbs ratio Number of tags indicating adverbs divided by the total number of POS tags. 10-6. WH ratio Number of tags indicating WH tokens (what, which, what’s, whose . . . ) divided by the total number of POS tags. 11-7. Modals ratio Number of tags indicating modals divided by the total number of POS tags. 12-8. Determiners ratio Number of tags indicating determiners divided by the total number of POS tags. 13-9. Verbs ratio Number of tags indicating verbs divided by the total number of POS tags. 3 Results Following the increasing order of complexity, the built models consisted in a Extreme Gradient Boosting (XGBoost) classifier, an Artificial Neural Network (ANN) and a Bidirectional Long Short Term Memory (LSTM) Neural Network. Of the three mentioned techniques, the Bidirectional LSTM had the best performance, followed by the ANN and the XGBoost in this order. The first tested model was the one built with the XGBoost technique, which consists in the application of an ensemble machine learning algorithm based on decision trees that uses gradient boosting [25]. This algorithm has several parameters that can be adjusted to better perform in different applications. The model used in this research mainly worked with three parameters, setting the booster mode to the gbtree option, the learning rate to 0.02 and the objective to the option binary:logistic. After being trained using the mentioned parameters configuration and the training set outputted from treatment number 1, the model had 81.05% of accuracy when tested against the data from the testing set. The Artificial Neural Network model was tested next with the same training set and had 83.15% of accuracy when tested against the testing set. The net architecture consisted of 2 hidden dense layers, configured to use the ReLU activation function and to have 16 and 8 units respectivly, followed by a dense layer with only one unit that was configured to use the sigmoid activation function. More complex and bigger architectures were also tested but as they did not produce better results than the one described, the simplest architecture was chosen. Analyzing the results obtained with the two models described above and aiming to obtain even better results, a third model was built with a different technique. The chosen technique was the LSTM, a type of Recurrent Neural Network (RNN) that is able to learn from sequential or temporal data, maintaining memory of long and short term dependencies [26]. Thus, going through a sequence, the analysis of each term is influenced by features and patterns learned from the 5 A PREPRINT - OCTOBER 26, 2023 Table 2: Performance comparison. Accuracy Trained Models Bidirectional LSTM 91.57% ANN 83.15% XGBoost 81.05% Conducted Study Humans 57.78% past, that is, from the terms that came previous to the current analyzed term. In the context of this research, a news article resulting from treatment number 2 described above is a sequence of POS tags and for each term, that is, POS tag in the sequence, the previous and next terms are known. This fact allowed the use of a Bidirectional LSTM, that differs from a normal LSTM by allowing the previous and the next term to influence the analysis of a given current term. The architecture of the built Bidirectional LSTM model is represented in Figure 3 and consisted of a embedding layer, responsible for converting each POS tag from the training set sequences in vectors of size 150, followed by a Bidirectional LSTM layer with 64 units and 2 dense layers set to use ReLu and Sigmoid activations functions respectively with 32 units each. The Bidirectional LSTM layer was configured to have a dropout of 0.2 and a recurrent dropout of 0.2. After training with the training set produced from treatment number 2, this model achieved 91.57% accuracy when tested against the data from the testing set. Figure 3: Proposed bidirectional LSTM model. Table 2 presents a comparison between the performances of the three models tested and humans performing the same task proposed for the models. The humans accuracy was calculated using data collected in a study conducted by this research. In this study, each participant was asked to read, through a website, 5 news articles randomly chosen from the test set used to test the models and classify according to their perception if the news was authored by a human or by the ChatGPT. A total of 63 people completed the study and their average accuracy was 57.78%. 4 Conclusion The analysis of the results present on Table 2 shows that the proposed LSTM model performed very well on the assigned authorship attribution task, especially when compared to humans performing the same task, fact that highlights its importance as a tool to help combat the problems caused by the ChatGPT written news that were mentioned above. Although 91.57% represents a very good accuracy score, it can be improved using a bigger dataset to train, validate and 6 A PREPRINT - OCTOBER 26, 2023 test the model. It is important to mention that this model was not tested on news originated from news sites different from the 3 that were initially selected to compose the dataset, therefore further research may focus on generalizing this approach and make the model effective for any given news source. References [1] Yupeng Chang, Xu Wang, Jindong Wang, Yuan Wu, Kaijie Zhu, Hao Chen, Linyi Yang, Xiaoyuan Yi, Cunxiang Wang, Yidong Wang, et al. A survey on evaluation of large language models. arXiv preprint arXiv:2307.03109, 2023. [2] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017. [3] Google Trends, 2022. [4] Steven Bird, Ewan Klein, and Edward Loper. Natural language processing with Python: analyzing text with the natural language toolkit. \" O’Reilly Media, Inc.\", 2009. [5] Enkelejda Kasneci, Kathrin Seßler, Stefan Küchemann, Maria Bannert, Daryna Dementieva, Frank Fischer, Urs Gasser, Georg Groh, Stephan Günnemann, Eyke Hüllermeier, et al. Chatgpt for good? on opportunities and challenges of large language models for education. Learning and individual differences, 103:102274, 2023. [6] Patrick Juola et al. Authorship attribution. Foundations and Trends® in Information Retrieval, 1(3):233–334, 2008. [7] Jianyang Deng and Yijia Lin. The benefits and challenges of chatgpt: An overview. Frontiers in Computing and Intelligent Systems, 2(2):81–83, 2022. [8] Krzysztof Wach, Cong Doanh Duong, Joanna Ejdys, R¯uta Kazlauskait˙e, Pawel Korzynski, Grzegorz Mazurek, Joanna Paliszkiewicz, and Ewa Ziemba. The dark side of generative artificial intelligence: A critical analysis of controversies and risks of chatgpt. Entrepreneurial Business and Economics Review, 11(2):7–24, 2023. [9] Manan Singh and Kavi Narayana Murthy. Authorship attribution using filtered n-grams as features. In Data Engineering and Communication Technology: Proceedings of ICDECT 2020, pages 379–390. Springer, 2021. [10] Yunita Sari, Mark Stevenson, and Andreas Vlachos. Topic or style? exploring the most useful features for authorship attribution. In Proceedings of the 27th international conference on computational linguistics, pages 343–353, 2018. [11] Efstathios Stamatatos. A survey of modern authorship attribution methods. Journal of the American Society for information Science and Technology, 60(3):538–556, 2009. [12] Prasha Shrestha, Sebastian Sierra, Fabio A González, Manuel Montes, Paolo Rosso, and Thamar Solorio. Convolutional neural networks for authorship attribution of short texts. In Proceedings of the 15th conference of the European chapter of the association for computational linguistics: Volume 2, short papers, pages 669–674, 2017. [13] Julian Hitschler, Esther Van Den Berg, and Ines Rehbein. Authorship attribution with convolutional neural networks and pos-eliding. In Proceedings of the Workshop on Stylistic Variation, pages 53–58, 2017. [14] Helena Gómez-Adorno, Juan-Pablo Posadas-Duran, Germán Ríos-Toledo, Grigori Sidorov, and Gerardo Sierra. Stylometry-based approach for detecting writing style changes in literary texts. Computación y Sistemas, 22(1):47– 53, 2018. [15] Chen Qian, Tianchang He, and Rao Zhang. Deep learning based authorship identification. Report, Stanford University, pages 1–9, 2017. [16] Christian Oliva, Santiago Palmero Muñoz, Luis F Lago-Fernández, and David Arroyo. Improving lstms’ under- performance in authorship attribution for short texts. In Proceedings of the 2022 European Interdisciplinary Cybersecurity Conference, pages 99–101, 2022. [17] Fereshteh Jafariakinabad, Sansiri Tarnpradab, and Kien A Hua. Syntactic recurrent neural network for authorship attribution. arXiv preprint arXiv:1902.09723, 2019. [18] Biyang Guo, Xin Zhang, Ziyuan Wang, Minqi Jiang, Jinran Nie, Yuxuan Ding, Jianwei Yue, and Yupeng Wu. How close is chatgpt to human experts? comparison corpus, evaluation, and detection. arXiv preprint arXiv:2301.07597, 2023. [19] Alessandro Pegoraro, Kavita Kumari, Hossein Fereidooni, and Ahmad-Reza Sadeghi. To chatgpt, or not to chatgpt: That is the question! arXiv preprint arXiv:2304.01487, 2023. 7 A PREPRINT - OCTOBER 26, 2023 [20] Amanda Ferrari Iaquinta. AmandaFI/Human-Writing-Vs.-GPT-Writing: Code and Dataset used in the article: Detection Of News Written By The ChatGPT Through Authorship Attribution Performed By A Bidirectional LSTM Model. https://github.com/AmandaFI/Human-Writing-Vs.-GPT-Writing, September 2023. [21] Angel R Martinez. Part-of-speech tagging. Wiley Interdisciplinary Reviews: Computational Statistics, 4(1):107– 113, 2012. [22] Hoshiladevi Ramnial, Shireen Panchoo, and Sameerchand Pudaruth. Authorship attribution using stylometry and machine learning techniques. In Intelligent Systems Technologies and Applications: Volume 1, pages 113–125. Springer, 2016. [23] Mudit Bhargava, Pulkit Mehndiratta, and Krishna Asawa. Stylometric analysis for authorship attribution on twitter. In Big Data Analytics: Second International Conference, BDA 2013, Mysore, India, December 16-18, 2013, Proceedings 2, pages 37–47. Springer, 2013. [24] Ilker Bozkurt, Ozgur Baghoglu, and Erkan Uyar. Authorship attribution. In Foundations and Trends in Information Retrieval - FTIR, volume 1, pages 1 – 5, 12 2007. [25] Tianqi Chen and Carlos Guestrin. Xgboost: A scalable tree boosting system. In Proceedings of the 22nd acm sigkdd international conference on knowledge discovery and data mining, pages 785–794, 2016. [26] Zhiheng Huang, Wei Xu, and Kai Yu. Bidirectional lstm-crf models for sequence tagging. arXiv preprint arXiv:1508.01991, 2015. 8","libVersion":"0.2.1","langs":""}