{"path":".obsidian/plugins/text-extractor/cache/b8c980b2c5d848861f60d1bd7b7894e1.json","text":"multiplication, and division) and the power operation y = a” where a is an integer, but we do not have a fast way to compute a logarithm directly. Therefore, we seek an iterative method to approximate z = logy(n). (a) Recall that Newton’s method for solving an equation of the form f(z) =0 is given by f(zx) Ik-H*lk*mv k=0,1,2,... and it requires an initial guess, zo. Suggest an efficient iterative formula based on Newton’s method to compute logy(n). Write the formula in a way that is suitable for numerical computations. You may assume that your initial guess is close enough to the value we are trying to compute. If it helps, the derivative of the function r(z) = 2% is r'(z) = 2\" In(2), and you may assume that the value In(2) = 0.6931... is known to you ahead of time. (b) What is the convergence order of the formula you derived in part (a)? Explain. (¢) Why is there no point in this case (from a computational point of view) to consider applying the secant method instead? Recall that this method is based on approximating f’(z) by a finite dif- ference approximation that involves only the function values and not the derivative. There is no need to write down the formula; just answer the question in a few short sentences","libVersion":"0.2.1","langs":"eng"}