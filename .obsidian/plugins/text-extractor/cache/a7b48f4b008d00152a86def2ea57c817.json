{"path":".obsidian/plugins/text-extractor/cache/a7b48f4b008d00152a86def2ea57c817.json","text":"9 Fog-o-War [8 marks| RECALL the TUG-O-WAR problem: given n people p, ..., p, (for n > 1) and their weights wy, ..., Wy, we want to generate two teams that are well-balanced. Specifically, we consider this decision variant of the problem: given n people with their weights and a target difference k, can we assign each of the n people into one of two teams (team 1 and team 2) such that the absolute difference in total weight between team 1 and team 2 is less than or equal to k7 1. Give a good certificate for TUG-O-WAR problem. (Note: you do not need to prove that TUG-O-WAR is in NP, but your certificate should be a good choice for such a proof.) [2 marks]| 2. Recall the SUBSET-SUM problem: given a list of numbers A = ay, ..., a, and a value W, does there exist a subset of elements of A that sum to W? SUBSET-SUM is known to be NP-complete. Give a reduction from SUBSET-SUM to TUG-O-WAR to prove that TUG-O-WAR is NP-hard. Do not prove the correctness of your reduction, but you should clearly explain the key elements of your reduction and why they are there. Assume that all elements of A are positive, and that % < W < m, where m is the sum of all elements in A. Remember that your algorithm creates the TUG-O-WAR instance and can therefore, e.g., freely choose the value of k to be a simple and useful one. [6 marks]","libVersion":"0.2.1","langs":"eng"}