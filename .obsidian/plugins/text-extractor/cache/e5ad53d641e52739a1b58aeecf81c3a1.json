{"path":".obsidian/plugins/text-extractor/cache/e5ad53d641e52739a1b58aeecf81c3a1.json","text":"1. The number e = 2.718281828459045... is formally defined as n e= lim (1+l> . n—yoo n A person who knew the formula for the limit but was not sure what the actual value of e was decided to figure it out by computing n en = (1 + l) n for a few large values of n, and increase n until convergence to a specific number was identified. That person performed their computations on the IEEE 754 double precision floating point system, and this was the output: n en 10 2.704813829421528 10° 2.718145926824926 10% 2.718281798347358 106 1.000000000000000 10%21.000000000000000 The person was puzzled by the results, and specifically, by what seemed to be a rather dramatic and abrupt change of value of e,, for very large values of n. Explain what went wrong here from a numerical computa- tion point of view and why the first three approximations in the above table are reliable in this case while the approximations for the two largest values of n are wrong on this floating point system. Make sure to explain specifically what breaks down in the numerical process.","libVersion":"0.2.1","langs":"eng"}