{"path":".obsidian/plugins/text-extractor/cache/7001270503fcdaa4700ad757b29066b1.json","text":"| 52.8 If the disk spins at 10000 RPM, then the disk spins at 166.667 rotations per second, and it takes 6 ms per rotation. If there are 32 sectors per track, then the time to transfer a single sector is 6/32 or 0.188 ms. If we have a single large extent, then we will pay one seek per cylinder that the file occupies. (We will not pay any rotational latency, because we assume that the disk can read the entire track into the track buffer starting at any location.) To calculate the number of blocks in a cylinder, we multiply the number of blocks per track times twice the number of platters (remember platters have both tops and bottoms). In this case, BlocksPerCylinder = 2 x 8 * 32. Our total time to read the file will be: seektime x NumberO fCylinders + Trans ferTime x NumberO f Blocks where NumberO fCylinders =ceil(nBlocks/ Blocks PerCylinder). Note that this calculation is done using integer arithmetic (so the fractional part gets dropped). In this case, that produces: 7.9 * floor((352 + 512 â€” 1)/512) + 352 * 0.188, which is equal to 73.9 ms. If we assume that the block-allocated file is distributed randomly around the disk, then every block requires both a seek, one-half of a rotation on average, and a transfer, which is 352 (7.9 + 6/2 + 0.188), which is 3902.8. And speedup is simply the slower time over the faster time, or 3902.8/73.9 = 52.81190798376184.","libVersion":"0.2.1","langs":"eng"}