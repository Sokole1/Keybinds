{"path":".obsidian/plugins/text-extractor/cache/18cfdd061cf2c20278aa4bcfc819e713.json","text":"Q5 Quicksort with Duplicate Keys 2 Points The QuickSort algorithm in the worksheet works when all numbers are distinct. In contrast, the following algorithm handles duplicate numbers. For example, it can sort the array (1,3,9,3,7,1,7,9,31, which has size 9 but just four distinct numbers, namely 1,3,7, and 9. function QUICKSORT-WITH-DUPLICATES(A[L..n]) > returns the sorted array A of n numbers with duplicates if n > 1 then Choose pivot element p = A[1] Let Lesser be an array of all elements from A less than p Let Equal be an array of all elements from A equal to p Let Greater be an array of all elements from A greater than p LesserSorted - QUICKSORT-WITH-DUPLICATES(Lesser) GreaterSorted «+— QUICKSORT-WITH-DUPLICATES(Greater) return the concatenation of LesserSorted, Equal, and GreaterSorted else return A We want to analyze the algorithm runtime both as a function of the array size n, as well as the count d of distinct numbers (d = 4 in the above example array).","libVersion":"0.2.1","langs":"eng"}