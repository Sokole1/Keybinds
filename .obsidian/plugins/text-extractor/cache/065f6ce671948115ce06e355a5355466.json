{"path":".obsidian/plugins/text-extractor/cache/065f6ce671948115ce06e355a5355466.json","text":"R4.1. Counting Cache Misses For a 128KB (131072 bytes) direct-mapped cache with 128-byte blocks, consider the following code snhippet. #define SIZE 11761 long A[SIZE]; //long is 8 bytes long total = 0; for (int i = 0; i < 2; i++) { for (int j = 0; j < SIZE; j += 8) { total += A[jl; } } For this question, consider accesses to array A, only. Assume array A is allocated starting at address 0x2000000000. Assume no elements of A are in the cache when the code begins running for each part below. How many misses (on array A) will this code produce? integer (-] If we change the array to contain 31376 elements, how many misses (on array A) will this code produce? integer (2] If we change the array to contain 50368 elements, how many misses (on array A) will this code produce? integer -] RV AT e IR T T Gy ol Additional attempts available with new variants @","libVersion":"0.2.1","langs":"eng"}