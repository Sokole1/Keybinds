{"path":".obsidian/plugins/text-extractor/cache/b29723d58c0e697778a0b8e42e7825f2.json","text":"In this problem, we're introducing a new instruction into the y86 architecture: MINQ rA, rB which assigns the smaller of R[rA] and R[rB] to R[rB]. Consider the following y86 program 1 irmovq Â©x5000, %rsp 2 irmovq 6, %rbp 3 irmovq 1, %rbx 4 irmovq 8, %ri3 5 xorq %rl4, %rl4 6 xorq %rl2, %ri2 7 loop: 8 rrmovq %rbx, %rdi 9 subq %rbp, %rdi 10 irmovq 1, %rax 11 12 ig done 13 subq %rax, %rbp 14 15 mrmovq A(%rl4), S%rdi 16 call check 17 addq %rax, %ri2 18 addq %rl3, %ri4 19 jmp loop 20 done: 21 rrmovq %rl2, %rax 22 halt 23 check: 24 irmovq 5, %rax 25 MINQ %rdi, %rax 26 ret 27 .pos 0x2000 28 A: 29 .quad 1 30 .quad 6 31 .quad 9 32 .quad 8 33 .quad 8 34 .quad 3 35 How many times will line 8 execute? integer @ What value (in decimal) will be in register %rax when this function halts? integer @","libVersion":"0.2.1","langs":"eng"}