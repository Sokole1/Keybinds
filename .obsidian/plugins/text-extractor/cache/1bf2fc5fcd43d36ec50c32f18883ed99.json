{"path":".obsidian/plugins/text-extractor/cache/1bf2fc5fcd43d36ec50c32f18883ed99.json","text":"2 Hospitals and Residents A group of residents each needs a residency in some hospital. A group of hospitals H each need some number (one or more) of residents from some set R, with some hospitals needing more and some fewer. Each group has preferences over which member of the other group they’d like to end up with. The total number of slots in hospitals is exactly equal to the total number of residents. Our problem, which we’ll call RPH, is to fill the hospitals slots with residents in such a way that no resident and hospital that weren’t matched up will collude to get around our suggestion (and give the resident a position at that hospital instead). Let n = |R| (the size of the set of residents). Note that |[H| < |R|, but H may be much smaller. Let s(h) denote the number of slots in hospital h, where n = 3, .y s(h). That is, there are exactly enough slots for the residents. In a valid solution, each resident must appear in exactly one tuple (be paired with one hospital), while each hospital h must appear in exactly s(h) tuples (be paired with as many residents as it has slots). An instability arises when some hospital h is matched with residents Hj, = {r{,r}, \"'T;(h)} and some resident 7 is matched with A/, such that r prefers h to A’ and h prefers r to its lowest-ranked member in Hp. Describe an approach to solve RHP by reducing it to some problem B that you know already has an efficient algorithm. 1. Choose a problem B to reduce to. 2. Design an algorithm to transform any instance I of RHP into an instance I’ of B. 3. Design an algorithm to transform a solution S’ for I’ of B into a solution S for instance I of. RHP. 4. Explain why your reduction produces a correct solution for any RHP instance: if S’ is a good solution for the instance I’ produced by part (i) of your reduction, then part (ii) of your reduction transforms S’ info to a good (i.e., valid and stable) solution S for the original instance I of RHP.","libVersion":"0.2.1","langs":"eng"}