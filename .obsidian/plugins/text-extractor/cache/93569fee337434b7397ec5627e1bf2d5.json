{"path":".obsidian/plugins/text-extractor/cache/93569fee337434b7397ec5627e1bf2d5.json","text":"To fix this, the owners of the coffee shop divide the counter area by placing the cashier and the barista in separate workstations. The cashier’s workstation is public facing and designed to receive customers. The barista’s area is private. The barista can still receive orders from the cashier but not directly from customers. ) /) ) Cashier m n n Customers give their A é é é orders to the cashier. w \\/ \\/ \\/ =D = ] &= I Customers | 1 Barista I m Customers are prevented from ' ] giving their orders to the barista. .> A cashier, a barista, and three customers in line. The icon for the first customer in line has an arrow pointing to cashier showing that the customer gives their order to the cashier. Then the cashier icon has an arrow pointing to barista icon showing that the cashier forwards the customer's order to the barista. The last customer in line tries to give their order directly to the barista, but they're blocked from doing so. This is similar to how you can use AWS networking services to isolate resources and determine exactly how network traffic flows. In the coffee shop, you can think of the counter area as a VPC. The counter area divides into two separate areas for the cashier's workstation and the barista’'s workstation. In a VPC, subnets are separate areas that are used to group together resources.","libVersion":"0.2.1","langs":"eng"}