{"path":".obsidian/plugins/text-extractor/cache/ab604e1a0dac2223f8301140e91434e2.json","text":"- PR U GICTAT)) 14 @ | 1int sockfd, new_fd; // listen on sock_fd, new connection on new_fd El struct addrinfo hints, *servinfo, *p; 8 struct sockaddr_storage their_addr; // connector's address information 7/ socklen_t sin_size; 3 struct sigaction sa; S int yes=1; 4 char s[INET6_ADDRSTRLEN]; E int rv; 2 (| ! memset(&hints, @, sizeof hints); ] hints.ai_family = AF_UNSPEG; 1 hints.ai_socktype = SOCK_STREAM; 2 hints.ai_flags = AI_PASSIVE; // use my IP E} 4 \"lf ((rv = getaddrinfo(NULL, PORT, &hints, &servinfo)) != @) { 5 | fprintf(stderr, \"getaddrinfo: %s\\n\", gai_strerror(rv)); 3 | return 1; 7| 1} 8 1 9 // loop through all the results and bind to the first we can (] for(p = servinfo; p != NULL; p = p->ai_next) { 1 if ((sockfd = socket(p->ai_family, p->ai_socktype, 2 | p->ai_protocol)) == -1) { c perror(â€œserver: socket\"); 4 continue; 5 3}","libVersion":"0.2.1","langs":"eng"}