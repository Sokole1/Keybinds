{"path":".obsidian/plugins/text-extractor/cache/a878f4aec15e537cf82064fb77cd93cf.json","text":"Us er S tor ies (s mall requirements ) CP S C 310: Introduction to S oftware E ngineer ing S cru m t imeline Note that y ou are alway s iterating from wor king product, to wor king product, ev en if only s ome of the features are pres ent. S P RI NT US E R S T O RIE S Role G oal Beneﬁt S ometimes jus t called the “Us er S tor y ”. E ngineering Tasks Deﬁnit ions of Done S ometimes called A cceptance Cr iter ia. (S olution to R ole-Goal-B eneﬁ t) US E R S T O RIE S Role G oal Beneﬁt S ometimes jus t called the “Us er S tor y ”. Deﬁnit ions of Done S ometimes called A cceptance Cr iter ia. (S olution to R ole-Goal-B eneﬁ t) E ngineering Tasks Cont ract : US E R S T O RIE S Role G oal Beneﬁt S ometimes jus t called the “Us er S tor y ”. Deﬁnit ions of Done S ometimes called A cceptance Cr iter ia. (S olution to R ole-Goal-B eneﬁ t) E ngineering Tasks E ngineering d et ails: CP S C 310: Introduction to S oftware E ngineer ing RO LE GO AL BE NE FIT DE FINITIO NS O F DO NE E NG INE E RING TA S K S W hich users to test w it h W hat b ehaviour to b uild W hat test s to sp ecify Informs W hat need s to b e d one ST O R Y P O INT S Informs # of hours it w ill t ak e Help s p riorit iz e user stories Connect ing user stories + soft . engineering CP S C 310: Introduction to S oftware E ngineer ing Role G oal Beneﬁt st atement ● Hav e a R ole (the s peciﬁ c ty pe of us er e x pres s ing the need). ● Hav e a Goal (the des ired behav iour ). ● Hav e a B eneﬁ t (the outcome of the behav iour ). CP S C 310: Introduction to S oftware E ngineer ing Role G oal Beneﬁt st atement ● Hav e a R ole (the s peciﬁ c ty pe of us er e x pres s ing the need). ● Hav e a Goal (the des ired behav iour ). ● Hav e a B eneﬁ t (the outcome of the behav iour ). A s a cus tomer, … I want to be able to buy s omething … and then get it. CP S C 310: Introduction to S oftware E ngineer ing Role G oal Beneﬁt st atement ● A s a us er , I want to s earch for contacts s o I can mes s age them. ● A s a cus tomer , I want to s earch for product items , s o I can buy them. ● A s an employ er , I want to pos t a job on the webs ite s o people can apply for it. ● Hav e a R ole (the s peciﬁ c ty pe of us er e x pres s ing the need). ● Hav e a Goal (the des ired behav iour ). ● Hav e a B eneﬁ t (the outcome of the behav iour ). CP S C 310: Introduction to S oftware E ngineer ing R G B : A s a s hopper , I want to be able to buy s omething and then v iew pas t purchas es s o that I can track s pending on the s ite . Deﬁnit ion of d one: Us er clicks the button buy , and it appear s in their purchas ed items , and is s hipped to their home and the us er will s ee the money deducted from their account. User stor y e xamp les CP S C 310: Introduction to S oftware E ngineer ing User stor y e xamp les Bad User stor y: A s a b uyer, When I’m not approv ed for a purchas e by the s y s tem, a popup s hould appear where I can click a “reques t approv al” button (s olution domain! ) and then receiv e conﬁ r mation that the approv al reques t has been s ent. (no beneﬁ t! How v aluable is this ?) Deﬁnit ion of d one: Us er is s eeing “not approv ed, and clicks “reques t approv al”, and this tr igger s a react function which mak es us er ’s ID appear in the lis t of approv al reques ts , and an email is s ent back to the us er that their reques t is in proces s ing (DoD is us er-lev el: s hould not mention code; DoD is client-or iented s olution domain) CP S C 310: Introduction to S oftware E ngineer ing Not Role G oal Beneﬁt st atement s: ● Implement contact lis t v iew ContactLis tV iew .ts . ● Deﬁ ne the product table databas e s chema. ● A utomate the job pos ting algor ithm. ● R efactor the code to mak e it more readable. Thes e are engineer ing tas ks . CP S C 310: Introduction to S oftware E ngineer ing G ood d eﬁnit ions of d one ● Thes e are y our contracts with y our clients . ● This is how y ou know y ou hav e completed a us er s tor y , and can mar k it res olv ed. ● It’s lik e a s equence diagram that e x plains how the features wor k. ○ This is how y ou know whether y ou can tes t y our us er s tor y (if y ou can’t, y ou need a diﬀ erent us er s tor y !!). Deﬁnit ion of d one: Us er clicks the buy button, and the item appear s in their purchas ed items , and is s hipped to their home. CP S C 310: Introduction to S oftware E ngineer ing E ngineering t asks ● Dev eloper s break down us er s tor ies into engineer ing tas ks . ● Thes e are NO T from a us er per s pectiv e -- they are jus t things that need to be done to get the wor k completed (ﬁ nis h the par s er ; inv es tigate the JS ON librar y ; s et up the databas e; s etup mocks for tes ting; etc). ● B as ed on thos e tas ks , the dev eloper s es timate how much time the s tor y will tak e. [https : //w w w .mountaingoats oftware.com/blog/the-diﬀ erence-between-a-s tor y -and-a-tas k] CP S C 310: Introduction to S oftware E ngineer ing E st imat ing stor y p oint s ● A s tor y point bas ically cor res ponds to an hour of dev eloper wor k. ● E s timation is impor tant to ens ure team can complete wor k. ● A ls o widely us ed to s ee if team is ahead/behind s chedule. ● E nables greater res pons iv enes s / team awarenes s . CP S C 310: Introduction to S oftware E ngineer ing E st imat ing stor y p oint s ● E s timation traditionally was made by a dev eloper, gues s ing (bas ed on e x per ience) how long a s tor y would tak e them. ● E s timates are mov ing more towards an ontology : ○ E .g., us ing clas s iﬁ cations rather than opaque e x per ience. ○ K ey es pecially for y oung teams or new domain. S ingle location Multiple locations S imple change 1 2 Comple x change 3 5 Where each of thes e ratings would hav e s ome s tandard number of hour s as s ociated B ur ndown char t CP S C 310: Introduction to S oftware E ngineer ing 1 - Tr iv ial cos metic change in v er y few places 2 - Many tr iv ial changes acros s a project (follow e x is ting patter ns , adding proper ties to e x is ting objects etc.) 3 - Changes that require a new des ign or concept and are s traightfor ward to implement in the e x is ting des ign 5 - Changes that require a new des ign or concept and require s ome rewor k of the e x is ting des ign OR are v er y complicated 8 - Changes that require a new des ign or concept and require s ome rewor k of the e x is ting des ign A ND are v er y complicated C ase of a local est imat ion ap p roach CP S C 310: Introduction to S oftware E ngineer ing 1 - … 2 - … 3 - … 5 - … 8 - ... W hy F ibonacci? “I think if it was linear, it wouldn't r epr es ent how comple x s ome things ar e, that being s aid I think it's mor e impor tant for the team to hav e a uniﬁ ed deﬁ nition of what each number r epr es ents . Generally we nev er pull in [to the s pr int] things that ar e 8. W e would ins tead pull in r es earch tick ets [A K A : a r es earch s pik e] or br eak down the wor k . A n 8 in our wor ld is an indicator that too much is unk nown” C ase of a local est imat ion ap p roach CP S C 310: Introduction to S oftware E ngineer ing F rom us er s tories to ep ics to t hemes • Us er s tor ies are often related, but independent. • E pics group together related us er s tor ies : • Us ually deliv ered ov er multiple s pr ints . • Grouping of s tor ies that s hare an ov erall goal. • Themes group epics and des cr ibe ev en higher-lev el objectiv es . https: //www .aha.io/roadmapping/guide/agile/themes-vs-epics-vs-stories-vs-tasks CP S C 310: Introduction to S oftware E ngineer ing G ood t hings ab out small req uirement s ● Clear linkage between problem domain and s olution domain becaus e deﬁ nitions of done and s uccinct des cr iptions . ● Decreas e r is k: ○ DoD mak es s ure we are building the r ight thing. ○ S mall increments mean failure detected quick er. ● Thes e are s till legal documents ! ● They do not hav e hierarchy the way pr ior requirements did (though clus ter s of them might mak e s ens e). ● Great way to dis tr ibute wor k between team member s ! CP S C 310: Introduction to S oftware E ngineer ing A ssessing user stories: INV E S T ● A gile approaches depend on us er s tor ies . ● If they are ill deﬁ ned or incomplete, the s tor y will be built poor ly and any time es timates are meaningles s . ● INV E S T prov ides a us er s tor y checklis t: ○ Independent ○ Negotiable ○ V aluable to us er s or cus tomer s ○ Es timatable ○ S mall ○ T es table INV E S T: Ind ep end ent Us er s tor ies s hould be independent of one another, but obv ious ly they ’re not implemented in a v acuum. Us er requirements us ed to be hierarchical lik e this : E dit Te x t P ut red s quiggles under mis s pelled words Change te x t font Copy and P as te Te x t To implement the “E dit Te x t” feature, y ou would hav e to implement all the s ubfeatures . Only then would the product be done and ready to s hip. That hierarchy v anis hed, leav ing independent us er s tor ies Us er s tor ies s hould be independent of one another, but obv ious ly they ’re not implemented in a v acuum. INV E S T: Ind ep end ent P ut red s quiggles under mis s pelled words Change te x t font Copy and P as te Te x t The product can s hip with only one of thes e completed. They can be pr ior itis ed diﬀ erently. Their engineer ing tas ks may build on each other, but they can be thought of without thinking of them as a collection. V A R IA NT: In the s ome cas es they do hav e to be grouped, but that is not the nor m. It’s bes t when us er s tor ies ar e not block ing each other, in ter ms of dev elopment or tes ting. CP S C 310: Introduction to S oftware E ngineer ing Ind ep end ent d oes not mean unseq uenced Us er s tor ies do need to build upon one another, but within a s pr int two us er s tor ies s hould ideally not be dependent on each other, or block ed by one another. S equencing the us er s tor ies CP S C 310: Introduction to S oftware E ngineer ing INV E S T: Negot iab le Befo r e User S t o r es: Us er s didn’t us ed to hav e a lot of bargaining power when talking about the requirements s peciﬁ cations for their s y s tems . This was mainly down to the fact that the requirements were diﬃcult to read. Us er s could not v is ualiz e how a feature would wor k -- they would as s ume they knew , and they might be wrong. A t the time the ﬁ nis hed product was r eleas ed, ther e wer e often unpleas ant s ur pr is es . CP S C 310: Introduction to S oftware E ngineer ing INV E S T: Negot iab le Negotiable means that clients hav e to be able to fully under s tand and cr itique how a feature will wor k. This means : • They are clear ly wr itten • The time es timates are pres ent, s o a cus tomer can decide whether the amount of time s pent on a par ticular s tor y is wor th it to them. CP S C 310: Introduction to S oftware E ngineer ing IN V E S T: V aluab le Deﬁ nitely bes t if it is prov iding v alue to a cus tomer. They are the ones pay ing for the dev elopment eﬀ or t. This forces thinking from the client’s per s pectiv e. F or e x ample, refactor ing needs to be put into a s tor y that has client v alue. (OR it could be put into a s pik e!) V A R IA NT: In practice, this is mos tly the cas e, but e x ceptions do hav e to be made s ometimes . CP S C 310: Introduction to S oftware E ngineer ing INV ES T: E st imat ab le E s timatable means that the us er s tor y s hould be wr itten precis ely enough that a dev eloper can es timate how long it will tak e. This has huge v alue to the dev eloper becaus e projects can r un ov er time if requirements are v ague. “Not realis ing what they really wanted” is not an option here, becaus e the wor k mus t be es timatable. CP S C 310: Introduction to S oftware E ngineer ing INV E S T: S mall This is in direct contras t to “B ig”, which is how requirements us ed to be. They us ed to be WHOLE FE A TUR E S that s panned the entire lifetime of the product. W ith A gile, s tor ies are added incrementally to products , s o they are s mall enough to ﬁ t within the wor k s pan of a couple of weeks (a s pr int). If it’s larger than that, y ou need to s plit it up. S ome teams s tr iv e to get s iz e down to a s ingle day -- but ov er ly granulating can lead to undes ired dependencies between s tor ies . CP S C 310: Introduction to S oftware E ngineer ing INV E S T : Test ab le This is how y ou know y ou’re done, and that y ou’v e built what y ou s aid y ou were going to build. Y ou need to know how to tes t, what to tes t, and what it means when all thos e tes ts pas s (and this refer s to either us er or unit tes ts ). S ome things are NO T tes table: • F or ins tance “Mak e the us er happy ” is not tes table. Y ou can’t actually meas ure whether s omeone is happy. • “Help the us er s elect x things in y s econds ” is tes table. Y ou can s ee whether, on av erage, ov er a cer tain population, us er s are generally able to ﬁ nis h that quickly. CP S C 310: Introduction to S oftware E ngineer ing User stor y INV E S T w alkt hrough A rchitect ural conte xt : Company email s y s tem with a databas e of contacts . CP S C 310: Introduction to S oftware E ngineer ing User stor y INV E S T w alkt hrough A rchitect ural conte xt : Company email s y s tem with a databas e of contacts . User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. CP S C 310: Introduction to S oftware E ngineer ing User stor y INV E S T w alkt hrough A rchitect ural conte xt : Company email s y s tem with a databas e of contacts . User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . CP S C 310: Introduction to S oftware E ngineer ing A rchitect ural conte xt : Company email s y s tem with a databas e of contacts . User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . User stor y INV E S T w alkt hrough Ind ep end ent ? Negot iab le ? V aluab le? E st imat ab le ? S mall? Test ab le ? CP S C 310: Introduction to S oftware E ngineer ing User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . User stor y INV E S T w alkt hrough • I n d ep en d en t: Y es ? Dependency on prev ious functionality to e x is t – what s earch fn e x is ts , need mes s age compos ing, need a DB . Needs more clar ity on thes e dependencies . CP S C 310: Introduction to S oftware E ngineer ing User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . • Neg o ti ab le: Y es . E as y to inter pret. Concis e. DoD is from a client’s point of v iew . User stor y INV E S T w alkt hrough CP S C 310: Introduction to S oftware E ngineer ing User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . User stor y INV E S T w alkt hrough • V alu ab le : Y es . B eneﬁ t to us er s e x plicitly s tated. A ble to mes s age. v iew . CP S C 310: Introduction to S oftware E ngineer ing • E sti m atab le: Not quite? Tr icky to es timate s ince e x is ting features unclear. • Lack of clar ity around DB . Does the DB s uppor t par tial s earches ? This may radically change the es timate for this s tor y. User stor y INV E S T w alkt hrough User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . CP S C 310: Introduction to S oftware E ngineer ing User stor y INV E S T w alkt hrough • S m all: Y es . F eature is s elf-contained, cer tainly does n’t feel large. User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . CP S C 310: Introduction to S oftware E ngineer ing User stor y INV E S T w alkt hrough • Testab le : Y es . E nd-to-end tes t for mulated in the DoD . • S ome ambiguity – “contacts included” means . What e x actly ? User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . CP S C 310: Introduction to S oftware E ngineer ing User stor y INV E S T w alkt hrough • I n d ep en d en t: Y es ? Neg o ti ab le: Y es . • V alu ab le : Y es . • E sti m atab le: Not quite? S m all: Y es . • Testab le : Y es . User stor y: A s an employ ee, I want to s earch for contacts by name s o I can mes s age them. Deﬁnit ions of d one: E mploy ee can enter a name or par tial name into a te x t bo x , click s earch, will s ee the lis t of contacts matching the s earch with check bo x ne x t to each one, and they can then pres s a mes s age button once at leas t one is s elected and then a compos e email with contacts included appear s . S pecs CP S C 310: Introduction to S oftware E ngineer ing ● S oftwar e r equir ements : ○ des cr ibe what functionality is needed. ○ mus t be comprehens ible by the client. ● S oftwar e s peciﬁ cations : ○ are the technical details about how to achiev e the functionality . ○ are wr itten for the engineer ing team. ● They communicate the s ame thing, but to diﬀ erent audiences . ● K ey challenge: trans lating infor mal (often v ague) requirements into the S E domain. ○ Hard due to the gap between the abs traction of natural languages and the precis ion required by an implementation. F rom req uirement s to sp eciﬁcat ions CP S C 310: Introduction to S oftware E ngineer ing • Unlik e reqs , s pecs can v ar y in their degree of for malis m. • Many tools : FS M/UML/diagrams , for mal logic, ps eudocode, … F rom req uirement s to sp eciﬁcat ions CP S C 310: Introduction to S oftware E ngineer ing ● S peciﬁ cations : ○ connect ev er y one on the team. ○ ens ures par ts of the implementation wor k together. ○ deﬁ ne the cor rectnes s of the implementation. ● Therefore, ev er y one mus t under s tand the s pec ○ Des igner s , dev eloper s , tes ter s , manager s , ops , ... ● Good s peciﬁ cations are es s ential for a project to be s ucces s ful. S p eciﬁcat ions mat ter CP S C 310: Introduction to S oftware E ngineer ing • A per fect s y s tem is wor thles s if it s olv es the wrong problem. • Need s pecs that are complete , cons is tent , concis e and precis e S p eciﬁcat ions are hard","libVersion":"0.2.1","langs":""}