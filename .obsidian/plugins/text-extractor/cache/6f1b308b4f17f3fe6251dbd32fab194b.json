{"path":".obsidian/plugins/text-extractor/cache/6f1b308b4f17f3fe6251dbd32fab194b.json","text":"To d a y • Le ar n i n g O u t c o m e s • De f i n e • S u p e r vi so r m o d e • U se r m o d e • P r o ce sso r p r i vi l e g e l e ve l • S yst e m ca l l • F i l e d e scr i p t o r • F i l e p e r m i ssi o n s ( m o d e ) • Us e t h e s y s t e m c a l l s o p e n , c l o s e , r e a d , wr i t e . • Re a d i n g • Ch a p t e r 1 0 : 1 0 . 1 - 10. 4 CP S C 3 1 3 1 Pr o c e s s o r Pr i v i l e g e l e v e l s • Mo d e r n h a r d w a r e h a s m u l t i p l e pr i v i l e g e l e v e l s . • Di f f e r e n t s o f t w a r e c a n r u n wi t h d i f f e r e n t p r i v i l e g e s . • Pr o c e s s o r h a r d w a r e t y p i c a l l y p r o v i d e s ( a t l e a s t ) t w o d i f f e r e n t m o d e s of op e r a t i on : • U s e r m o de : ho w a l l “ r e g ul a r pr o g r a m s ” r un. • Ke r n e l m o d e o r s u p e r v i s o r m o d e : h o w t h e OS r u n s . • M o s t pr o c e s s o r s ha v e o nl y t w o m o de s ; x 8 6 ha s f o ur ; s o m e o l de r m a c hi ne s ha d 8 ! • Th e m o d e i n w h i ch a p i e ce o f s o f t w a r e i s r u n n i n g d e t e r m i n e s : • Wh a t i n s t r u c t i o n s m a y b e e x e c u t e d . • Wh a t m e m o r y l o c a t i o n s m a y b e a c c e s s e d ( e n f o r c e d t h r o u g h t r a n s l a t i o n ) . • Wh e t h e r t h e p r o g r a m c a n d i r e c t l y i n t e r f a c e w i t h d e v i c e s . CP S C 3 1 3 2 Sy s t e m C a l l s • Wh e n a p r o g r a m w a n t s t o d o s o me t h i n g t h a t i t c a n n o t d o i n u s e r mo d e ( e . g . , i n t e r a c t w i t h a d i s k ) , i t n e e d s t o a s k t h e k e r n e l t o p e r f o r m th e a c ti v i ty o n i ts b e h a l f . • Sys t e m c a l l s ar e t h e m e c h an i s m t h a t ac c o m p l i s h e s t h i s . • Th e y a r e a w a y t o f o r a p r o g r a m t o e x p l i c i t l y r eq u es t t h e o p er a t i n g s y s t em t o do s o me t hi ng . • Sy s t e m c a l l s a p p e a r i n s e c t i o n 2 o f t h e m a n p a g e s . CP S C 3 1 3 3 The P OS I X Fi l e S y s t em A P I • Th e f i l e s y s t e m A P I s a r e i m p l e m e n t e d a s l i b r a r y f u n ct i o n s ( i n libc ) th a t i n v o k e sy s t e m c a l l s . • open : t a k e s a p a t h n a m e ( t h e n a m e o f a f i l e ) a n d r e t u r n s a fi l e de s c r i p t o r ( fd ), w h i c h y o u w i l l u s e t o a c c es s th a t f i l e. • close : t a k e s a n fd an d f r e e s u p al l t h e O S an d l i b r ar y r e s o u r c e t h a t ha v e be e n a l l o c a t e d t o i t . • read : r e a d s d a t a f r o m t h e f i l e r e f e r e n c e d b y fd in t o a u s e r - sp e ci f i e d buf f e r . • write : t a k e s d a t a f r o m a b u f f e r a n d w r i t e s i t t o t h e f i l e r e f e r e n c e d by fd . CP S C 3 1 3 4 A C o p y P r o g r a m i n P s e u d o c o d e copy( infile , outfile ) fd_in = open infile for reading fd_out = open outfile for writing while (there is data left to read) read data from fd_in write data to fd_out close fd_in close fd_out CP S C 3 1 3 5 op e n • int open(const char *path, int oflag , int mode) • Pa r a m e t e r s : • path : t he pa t h na m e o f t he f i l e y o u w i s h t o o pe n • oflag : f l a g v a l ue s t ha t t e l l y o u t hi ng s s uc h a s : • How y o u w a n t to a c c e s s t h e f i l e : O_RDONLY, O_WRONLY, O_RDWR • Wh a t t o d o i f t h e f i l e d o e s / d o e s n o t e x i s t ( O_CREATE, O_EXCL • How t h e f i l e s h o u l d b e h a v e w i t h r e s p e c t to ( O S) c a c h i n g ( O_SYNC, O_DIRECT) . • mode : i f t he f i l e do e s no t e x i s t a nd y o u c r e a t e i t , w ha t s ho ul d i t s a c c e s s m o de be s e t t o ( e . g . , w ho i s a l l o w e d t o r e a d/ w r i t e i t ) . Y o u c a n i g no r e t hi s f o r no w ; w e ’l l c o m e ba c k t o i t . • Re t u r n v a l u e : a f i l e d e s c r i p t o r • no n - ne g a t i v e i n t e g e r o n s uc c e s s ; - 1 o n e r r o r ) . • Ex a mpl e • open(“ myfile ”, O_CREAT, 0600) CP S C 3 1 3 6 A B r i e f D i g r e s s i o n o n F i l e S y s t e m M o d e s mseltzer@valdes :~$ ls - asl total 1592 40 drwx ------ 5 mseltzer instruct 448 Oct 27 19:28 ./ 280 drwxr - xr - x 952 root root 23819 Oct 28 17:23 ../ 40 drwx ------ 8 mseltzer instruct 167 Sep 21 10:53 313/ 192 - rw ------- 1 mseltzer instruct 36600 Mar 29 2020 foo 40 drwx ------ 2 mseltzer instruct 26 Apr 19 2018 Mail/ 64 - rw - r -- r -- 1 mseltzer instruct 725 Sep 14 17:08 xxx.c CP S C 3 1 3 7 Pe r m i s s i o n s o r ac c e s s m o d e s _ _ _ _ _ _ _ _ _ _ ow n e r gr o u p wo r l d ty p e RW X Re a d Wr i t e eX ec u t e - re g u l a r f i l e d di r e c t o r y l lin k We t y p i c a l l y s p e c i f y p e r m i s s i o n s u s i n g 3 oc t a l d i g i t s c or r es p on d i n g t o t h e pe r m i s s i o ns f o r e a c h c a t e g o r y o f us e r . cl o s e • int close(int fd ) • Pa r a m e t e rs : • fd : t h e f i l e d e s c r i p t o r t o b e c l o s e d • Re t u r n v a l u e : 0 o n s u c c e s s ; - 1 o n e r r o r • Ex am p l e • int ret = close( fd ); CP S C 3 1 3 8 re a d • ssize_t read(int fd , void * buf , size_t nbyte ) • Pa r a m e t e r s : • fd : f ile d e s c r ip t o r f o r th e f ile f r o m w h ic h t o r e a d • buf : a b u f f e r in t o w h ic h th e b y t e s r e a d a r e p la c e d • nbyte : th e n u m b e r o f b y t e s t o r e a d • Re t u r n v a l u e : a ssize_t (a signed long ) • On s u cce s s : t h e n u m b e r o f b y t e s r e ad • On e n d - of - fi l e : 0 • On f ai l u r e : - 1 • Ex a m p l e • char buf [4096]; • ssize_t bytes_read = read( fd , buf , 4096); CP S C 3 1 3 9 No t e : T he r e w a s s o m e v o i c e o v e r i n t he v i de o t ha t mi g h t b e c o n f u s i n g : A r e t u r n v al u e o f 0 i s t h e on l y r e t u r n t h a t a l w a y s i n d i c a t e s e n d of f i l e . A s h o r t r e ad ma y in d ic a t e e n d of fi l e but do e s no t ne c e s s a r i l y do s o . Th e r e f o r e , a f t e r a s h o r t r e a d , y o u s h o u l d t ry t o r e a d a g a i n . wri t e • ssize_t write(int fd , const void * buf , size_t nbyte ) • Pa r a m e t e r s : • fd : f ile d e s c r ip t o r f o r th e f ile t o w h ic h t o w r it e • buf : a b u f f e r c o n t a in in g th e d a t a t o w r it e • nbyte : th e n u m b e r o f b y t e s t o w r it e • Re t u r n v a l u e : a ssize_t (a signed long ) • On s u cce s s : t h e n u m b e r o f b y t e s w r i t t e n • On f ai l u r e : - 1 • Ex a m p l e • ssize_t bytes_written = write( fd , buf , 4096); CP S C 3 1 3 10","libVersion":"0.2.1","langs":""}