{"path":".obsidian/plugins/text-extractor/cache/b28d9d766833f2ae4f61d3cad7dbdd72.json","text":"(@] 2 I IES) Tl (g 2o T 1 T VR SR R0 (T Consider the following code snippet: struct myStruct { uint64_t *i0; uint32_t *il; intl6_t *i2; int64_t i3; }; void func(struct myStruct p@, int32_t *pl, int64_t *p2, int8_t *p3) { uint32_t xarr[5]; // stop here } Assume: We paused a program just as it reached the comment // stop here , and we use 8-byte pointers. Below you indicate where to find various items. If the item is in a register, select that register and leave the offset blank. If it is on the stack, give the appropriate register and hexadecimal offset to find that item. If the offset needs to be negative, write it with a negative sign, e.g., -0x1. Offsets must be in the range -0x100000 to 0x100000. Hint: Start by drawing a stack diagram for each scenario! y86 reference sheet may be helpful.","libVersion":"0.2.1","langs":"eng"}