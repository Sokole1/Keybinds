{"path":".obsidian/plugins/text-extractor/cache/14250a1f8411a6de46aaf4c2e2a5442e.json","text":"3. (2 marks) Here is a recursive algorithm that calculates low,(v) for all nodes v, when the call CALCULATE-LOWERg(s) is made. procedure CALCULATE-LOWER,(u) lows(u) 1 > there is a \"lower\" path from u to itself if dg[u] < dg then > u is not a leaf of a BFS tree rooted at s for all edges (u,v) such that dg[v] == ds[u] + 1 do lows(u) < low,(u)+ CALCULATE-LOWERs(v) Suppose that we make the call CALCULATE-LOWER,(s) on the example graph given above. On which nodes v is the call CALCULATE-LOWER,(v) made more than once? List all such nodes v. No justification needed.","libVersion":"0.2.1","langs":"eng"}