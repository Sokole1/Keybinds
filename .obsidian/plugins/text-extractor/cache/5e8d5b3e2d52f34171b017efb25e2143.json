{"path":".obsidian/plugins/text-extractor/cache/5e8d5b3e2d52f34171b017efb25e2143.json","text":"Nick B radley & K athar ine K er r F or per s onal us e only , pleas e do not dis tr ibute on non-UB C domains . Mod ule 3: S oft w are P rocess CP S C 310 CP S C 310: Introduction to S oftware E ngineer ing • Des cr ibe r is ks teams face and mechanis ms for reducing thes e r is ks . • B e able to e x plain why s oftware is built in teams , and why larger teams face diﬀ erent challenges than s maller teams (e.g., B rooks Law). • K now what teamwor k agreements / codes of conduct are, what they may contain, and why eﬀ ectiv e teams often hav e them e x plicitly recorded. • E x plain why proces s es are impor tant, and why they s hould be adopted ear ly. • P rov ide s ome reas ons that W ater fall was neces s ar y at the time, what it inv olv ed, and why s ome projects today s till rely on this proces s . • E x plain how e x treme and agile proces s es aros e, why they were pos s ible, and what beneﬁ ts and tradeoﬀ s they inv olv ed compared to pr ior proces s es . • E x plain all the ter ms and practices us ed in S cr um. • E x plain the high-lev el diﬀ erences between S cr um and K anban. • B e able to decompos e high-lev el requirements into us er s tor ies and be able to ev aluate us er s tor ies in ter ms of INV E S T attr ibutes . • E laborate on s oftware proces s r is ks , e x plaining how they may aﬀ ect project outcomes . • B e able to recall high-lev el concepts from pas t requirements failures and be able to us e this knowledge to reas on about proces s r is ks . P ro cess E xaminab le skills CP S C 310: Introduction to S oftware E ngineer ing L ect ure L earning O ut comes B y the end of this lecture, y ou will be able to ans wer : ● What is a Team and what is Teamwor k? ● Why s oftware is built in teams , and why larger teams face diﬀ erent challenges than s maller teams ? ● What are the r is k’ s teams face, and how are they mitigated? ● What is a Teamwor k agreement? T eamw o rk Teamwor k CP S C 310: Introduction to S oftware E ngineer ing W hat is a team? A group of people … wor king together … on a common goal. CP S C 310: Introduction to S oftware E ngineer ing W hat is teamw ork? The ability to coop erate and communicate eﬀ ectiv ely with other s to achiev e a common goal. CP S C 310: Introduction to S oftware E ngineer ingCP S C 310: Introduction to S oftware E ngineer ing Dependence Independence Interdependence I nterp ersonal mat urit y CP S C 310: Introduction to S oftware E ngineer ing [https ://gailgaz elle.com/the-impos ter-s y ndrome-common-among-phy s icians ] [https ://w w w .s cienceofpeople.com/impos tor-s y ndrome] Hav e y ou ev er felt lik e y ou are tr icking other s into thinking y ou are more s ucces s ful and capable than y ou actually are? I mp oster synd rome CP S C 310: Introduction to S oftware E ngineer ing [https ://gailgaz elle.com/the-impos ter-s y ndrome-common-among-phy s icians ] I mp oster synd rome S ev en tr ue/fals e ques tions : ____ Do y ou ev er feel y ou don’ t des er v e y our achiev ements ? ____ Do y ou ev er wor r y that people will ﬁ nd out y ou are s ecretly not wor thy ? ____ A fter a s ucces s , do y ou dis mis s it as jus t good luck or timing? ____ Do y ou think y ou hav e tr ick ed other s into thinking y ou are more s ucces s ful than y ou actually are? ____ Do y ou apologiz e for y our s elf ev en if y ou didn’ t do any thing wrong? ____ Do y ou think other s ov er v alue y our s ucces s ? CP S C 310: Introduction to S oftware E ngineer ing Teamw ork • P roper ties of eﬀ ectiv e teamwor k: • Cons is tency • R es pect • Inclus ion • Hones ty • E ﬀ ectiv e dev teams are us ually < 10 people. • F eature teams are ty pically 2-3 people. The ability to coop erate and communicate eﬀ ectiv ely with other s to achiev e a common goal. CP S C 310: Introduction to S oftware E ngineer ing E ﬀect ive communicat ion • Communicate s uppor tiv ely. • Lis ten openly. • Inter pret nonv er bal mes s ages . • Giv e us eful feedback. • R eceiv e feedback eﬀ ectiv ely. CP S C 310: Introduction to S oftware E ngineer ing P sychological safet y: P roject A ristot le ● 2012 - Google s tudied hundreds of teams to deter mine what made a high-per for ming team. ● Not who is on the team, but how they wor k ed together. P s y chological S afety : perception of cons equences of taking r is ks . [https: //www .nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html] CP S C 310: Introduction to S oftware E ngineer ing ● A contract which all member s of the team agrees to abide by. ● Created by the team bas ed on retros pectiv e meetings . ● Details team e x pectations : ○ Meeting frequency , email / te x t res pons iv enes s . ○ Git / is s ue track er / tes t s trategies . ● E v er y one accountable. ● W r ite it down! (R equired par t of J2) Teamw ork agreement [ https: //agilefaq.wordpress.com/2007/11/21/what-is-a-team-ground-rule-or-team-working-agreement] CP S C 310: Introduction to S oftware E ngineer ing P roject sp rint p lanning • E x plicitly break up checkpoint into indiv idual tas ks . • A dd tas ks in is s ue track er. A s s ign to indiv iduals . • E ns ure each tas k has a deﬁ nition-of-done or s ample unit tes t. (tes ts probably e x is t from C0 already ) • Cons ider project board to track tas ks . CP S C 310: Introduction to S oftware E ngineer ing W orking eﬀect ively as a team • Impor tant to be clear about roles and res pons ibilities . • S cheduling co-located time: lecture x 2 + lab at minimum! • Who is in charge of what as pects of each s pr int? • S pr int planning (identify ing and as s igning tas ks ). • W or king through tas ks . • V er ify ing tas ks with unit tes ts . • R eﬂ ecting on the tas ks and proces s . • P ull reques ts encourage collaboration. Technical R epres entations Topics CP S C 310: Introduction to S oftware E ngineer ing L ect ure L earning O ut comes B y the end of this lecture, y ou will be able to ans wer : ● Why do we us e technical repres entations ? ● What are the technical repres entations we will us e in this cour s e? ● F or each technical repres entation, what does it communicate, and in what s cenar ios s hould it be us ed? T ech n ical Rep resen tatio n s CP S C 310: Introduction to S oftware E ngineer ing E xaminab le S kills ● Under s tand why technical repres entations are impor tant. ● B e able to s elect and jus tify the appropr iate technical repres entation for the tas k at hand. ● B e able to trans late a technical des cr iption to a v ar iety of diﬀ erent repres entations . ● K now how to der iv e the limitations of a des ign from one or more technical repres entations . ● Technical Rep resent at ions CP S C 310: Introduction to S oftware E ngineer ing A rchitect ural & Design Rep resent at ions ● A bs tractions that are fundamentally about facilitatin g t ech n ical co m m u n icatio n between project s tak eholder s . ● A n opaque abs traction or one abs tracting the wrong detail has no v alue as it will not be adequately u n d erst o o d . ● P roper ties of repres entations : ○ Am b ig u ity: Open to more than one inter pretation? ○ Accu r acy: Cor rect within tolerances . ○ P r ecisio n: Cons is tent but not neces s ar ily cor rect. CP S C 310: Introduction to S oftware E ngineer ing Moving Bet w een Rep resent at ions CP S C 310: Introduction to S oftware E ngineer ing A lternate V iew s ● A bs tractions are often pres ented as ‘ view s’ on the s y s tem. ○ E ach v iew has a sp eciﬁ c g o al and focus es on s ubs ets of elements and/or relations hips . ○ Often focus on sp eciﬁ c co n cern s, s cenar ios , or s tak eholder s within a s y s tem. ● V iews o verlap ; maintaining co n sist en cy between v iews is challenging. CP S C 310: Introduction to S oftware E ngineer ing Uniﬁed Mod elling Language ( UML) • R epres enting s oftware s y s tems is hard. • UML prov ides a language for recording des ign decis ions . • S uppor ts many alter nativ es v iews (diagrams ). S tr uctural B ehav iour Clas s Diagram Deploy ment Diagram S tate Machine Diagram S equence Diagram CP S C 310: Introduction to S oftware E ngineer ing S t at ic S t ruct ure vs. Dynamic Behaviour ● Not neces s ar y to compile & deploy. ○ Is it s uﬃcient? ● B ehav iour matter s . S tatic relations hips are only a s ubs et of a complete s y s tem. ● B ehav iour is inherently dy namic: ○ The code alone may not be s uﬃcient. ○ Debugging only giv es glimps es in time. ● Increas ed abs traction == decreas ed control. Clas s Deploy ment S tate Machine S equence CP S C 310: Introduction to S oftware E ngineer ing Class Diagram ● Mos t common UML diagram. ● C apture the s tatic s tr ucture of the s y s tem. ● P rov ide details about k ey methods , ﬁ elds , and relations hips . ● Compact repres entation; k ey dev elopment v iew: ○ Names ○ Ty pes ○ V is ibility ○ Inher itance ○ Owner s hip ○ Dependencies CP S C 310: Introduction to S oftware E ngineer ing I nsight UBC L et’ s d r aw i t t o g eth er! CP S C 310: Intr oduction to S oftwar e E ngineer ing I nsight UBC Class Diagram < < in terface> > I I n sig h tF acad e + addDataset() + listDataset() + removeDataset() + performQ uery() I n sig h tF acad e - datasetP rocessor - queryP rocessor + addDataset() + listDataset() + removeDataset() + performQ uery() DatasetP ro cesso r … Q u eryP ro cesso r … CP S C 310: Intr oduction to S oftwar e E ngineer ing I nsight UBC Class Diagram < < in terface> > I I n sig h tF acad e + addDataset() + listDataset() + removeDataset() + performQ uery() I n sig h tF acad e - datasetP rocessor - queryP rocessor + addDataset() + listDataset() + removeDataset() + performQ uery() DatasetP ro cesso r … Q u eryP ro cesso r … S tudent Code I n sig h tF acad e. sp ec. ts it(...) I n sig h tF acad e - + addDataset() + listDataset() + removeDataset() + performQ uery() Gr ader CP S C 310: Introduction to S oftware E ngineer ing Dep loyment Diagram CP S C 310: Intr oduction to S oftwar e E ngineer ing No d e S er ver W eb S er ver CP S C 310: Introduction to S oftware E ngineer ing S eq uence Diagram • Codify how elements communicate with each other : • Dy namic v iew; how do s tatic s tr uctures interact? • Good for s howing protocols & interactions . • E nables concrete reas oning about dataﬂ ow . • A lmos t alway s captures a s peciﬁ c tas k. • P ar ticular ly us eful for as y nc and dis tr ibuted ﬂ ows . CP S C 310: Introduction to S oftware E ngineer ing S eq uence Diagram CP S C 310: Introduction to S oftware E ngineer ing S t ate Machine Diagram • Us ed to model comple x behav iour s and protocols . • E x tremely us eful for ev ent-bas ed modelling. • E s s entially ev er y UI. • F rom an app-per s pectiv e s tates can often be thought of as s creens / pages . Often us ed for reas oning about us er ﬂ ows . • C an be us ed to reduce the comple x ity of ev ent s y s tems . • e.g., reas on about when ev ents are applicable. • Trans itions r un to completion (lik e Jav aS cr ipt methods ). CP S C 310: Introduction to S oftware E ngineer ing P romises FULFILLED REJECTED P EN DIN G CP S C 310: Introduction to S oftware E ngineer ing FULFILLED REJECTED S E TTLE D P EN DIN G fulfill(..) reject(..) P romises CP S C 310: Introduction to S oftware E ngineer ing P romises FULFILLED REJECTED S E TTLE D P EN DIN G then(args:<T>) catch(reason:any) fulfill(..) reject(..) P romises CP S C 310: Introduction to S oftware E ngineer ing P romises FULFILLED REJECTED S E TTLE D P EN DIN G then(args:<T>) catch(reason:any) fulfill(..) reject(..) P romises CP S C 310: Introduction to S oftware E ngineer ing UI S t ates CP S C 310: Introduction to S oftware E ngineer ing Using Diagrams in P ract ice • Diﬀ erent diagrams are us ed for diﬀ erent reas ons dur ing des ign and dev elopment. Diagrams are often s hor t-liv ed and us ed to reas on about a concrete problem. • Choos ing the r ight diagram for the tas k y ou are tr y ing to s olv e is impor tant. While y ou will probably us e clas s diagrams the mos t, hav ing the dy namic diagrams at y our dis pos al is often e x tremely helpful for tr icky code. • Diagrams will v ar y depending on y our target audience, e.g. dev eloper s , UX des igner s , mar k eting, s ecur ity , adminis trator s , and what goal y ou are tr y ing to dis cus s .","libVersion":"0.2.1","langs":""}