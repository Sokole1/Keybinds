{"path":".obsidian/plugins/text-extractor/cache/e7915f8d41f3954b328b9c63ad23c7ed.json","text":"5. This question considers uniform random points on the disc 0 < z2? + y? < 1 with radius 1 centred at the origin. Parts (d) and (e) involve programming; the commands from scipy.stats.uniform helpful — for example scipy.stats.uniform.rvs generates continuous uniform random numbers on a specified interval. (a) A point is uniformly chosen in the unit disk 0 < 22 + 3 < 1. Find the probability that its distance from the origin is less than r, for 0 <r < 1. (b) Compute its expected distance from the origin. (c) Let the co-ordinates of the point be (X,Y). Determine the marginal p.d.f. of X. Are X and Y’ independent? (d) One way to generate uniform random points on this disc is to first generate uniform random points on the square with corners (+1,+1), by independently generating their z and y coordi- nates as uniform random variables on (—1,1), and then ignore the points outside the unit circle. To visualize this, generate 5000 uniform random points on the square with corners (+1,+1) and create a scatterplot of their locations. Draw a circle with radius one centred at the origin. The points inside the circle are then uniformly random points in the disk. (e) Another way to represent points in this unit circle is via polar coordinates. We might try naively to generate uniform random points in the circle by first generating a random radius R uniformly between 0 and 1, and then by generating a random angle 7\" uniformly between 0 and 2. Generate 5000 such random pairs (R,T) and create a scatterplot of the resulting points in the standard zy-plane; that is, so that each pair gives the point (z,y) = (RcosT, RsinT). Compare this scatterplot to the one you created in (a). Does this look uniformly random?","libVersion":"0.2.1","langs":"eng"}