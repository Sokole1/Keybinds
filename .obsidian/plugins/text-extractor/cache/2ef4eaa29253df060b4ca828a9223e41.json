{"path":".obsidian/plugins/text-extractor/cache/2ef4eaa29253df060b4ca828a9223e41.json","text":"4. |8 marks| In this question, we consider once again the Dominating Set problem from Tutorial 3 Recall that this problem is defined as follows Given a graph G = (V,E) and an integer k, we want to find a subset W of V such that |W| <k, and every elements of V — W is joined by an edge to an element of W. Here is a reduction from the Dominating Set problem to the Boolean Satisfiability problem (a) For each pair v;, vy of vertices of G, and integer j such that 1 < j < k, we add the clause X;;V Xy to the instance of SAT. (b) For each vertex v; of G e Assume the neighbours of v; are v;,, viy, ... v;,. e Let us denote by Y; ; the expression X;; V X, ;V Xy, j VX j V- VX, 5 e We add the clause ¥;1 VYia V-V ¥ to the instance of SAT. For instance, if v1 has neighbours vs and vg, and k = 3, then we would add the clause X131V X5V Xsg1VX12VX52V XgoV X13V Xs53V Xg3 to the instance of SAT. a. [4 marks| Suppose the graph G has a dominating set W that contains at most k vertices. Show how to set the values of the variables in the instance of SAT to make every clause evaluate to True b. [4 marks] Suppose that it is possible to assign the value True or False to each variable in the instance of SAT in a way that makes every clause evaluate to True. Show why this means that the graph G has a dominating set with at most k vertices.","libVersion":"0.2.1","langs":"eng"}