{"path":".obsidian/plugins/text-extractor/cache/19d735e524cc9a8c6d5dfee51feb773d.json","text":"QP5.4. Fun with System Calls Consider the state of the file descriptor management data structures once both the parent and the child process have reached the line containing the comment STOP HERE in the code snippet below. (Some manual pages are included for reference at the end of the problem.) int fdla = open(\"quizl.txt\", O_RDONLY); int fdlb = open(\"quiz2.txt\", O_RDONLY); pid_t child_pid = fork(); if (child_pid == 0) { int fd2a = open(\"quizl.txt\", O_RDONLY); int fd2b = open(\"quiz3.txt\", O_RDONLY); ¥ else if (child_pid > 0) { int fd3a = open(\"quizl.txt\", O_RDONLY); int fd3b = open(\"quiz4.txt\", O_RDONLY); dup2(fdla, fd3a); } int fd4a = open(\"quizl.txt\", O_RDONLY); int fd4b = open(\"quiz5.txt\", O_RDONLY); dup2(fdla, fd4a); char buffer[4096]; int result = read(fdla, buffer, 56); // STOP HERE Determine the number of entries in each table below for the parent and child process. Assume: « An open file table entry closes the instant its reference count reaches zero. « All of these counts start at O (i.e., ignore pre-existing entries like standard infout/error). o All system calls succeed. If parent and child share a table, enter the total number of entries in the box for the parent; leave the child blank (or enter -1). Number of entries in . : integer integer file descriptor table Number of entries in N integer integer open file table Number of entries in integer integer vnOde table","libVersion":"0.2.1","langs":"eng"}