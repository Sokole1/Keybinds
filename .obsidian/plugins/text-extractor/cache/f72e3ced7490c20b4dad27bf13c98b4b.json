{"path":".obsidian/plugins/text-extractor/cache/f72e3ced7490c20b4dad27bf13c98b4b.json","text":"1. [12 marks] Here’s the start of the main pseudocode. Fill in the missing parts so that your code finds the highest point and runs in O(logn) time. (Hint: If ¢ < j and trend(z) is UPWARD and trend(yj) is DOWNWARD, what can you conclude about the the index of the highest point? What other cases do you need to handle?) int find_top(int low, int high) { // You should maintain the invariant that low<=high and // that the point with the highest y-coordinate is among P[low..high]. // So, to find the top point among all of them, the top-level call to // this function is find_top(0,n-1). // Base Cases if (trend(low)==TOP) return low; if (trend(high)==TOP) return high; // YOUR CODE STARTS HERE!","libVersion":"0.2.1","langs":"eng"}