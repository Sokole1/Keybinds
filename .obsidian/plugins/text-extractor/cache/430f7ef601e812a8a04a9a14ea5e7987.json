{"path":".obsidian/plugins/text-extractor/cache/430f7ef601e812a8a04a9a14ea5e7987.json","text":"L6.1. Multi-byte cache block address components Assume you are given a system with memory addresses that are 28 bits wide. Further, assume that you are given a cache with the following specifications. » The cache is 4-way set associative « The number of bytes per cache block is 2 « The total size of the cache is 512 bytes Specify each range of bits of the memory address that correspond to the tag, set index, and block offset. If manually entering the bits of the memory address, the first input for a component should contain its more-significant bit index (i.e., Tag: \"Bits 31 through 20\" means the tag is made up of the bits addr[31] -> addr[20]) Address Indices (Note that purple corresponds to the tag part, green corresponds to the set index part, and blue corresponds to the offset part): 27 19 18 10 0 | I | Tags Bits 27 @ through 19 o Set Index Bits 18 @ through 10 (-] Offset Bits 10 @ through 0 -] Save & Grade Single attempt Ad(ditional attempts available with new variants @","libVersion":"0.2.1","langs":"eng"}