{"path":".obsidian/plugins/text-extractor/cache/80ae5412c815f130a59c1628ca41b495.json","text":"QP3.5. Cache simulation and Belady's Definition: A fully-associative cache with 2 slots might receive accesses A, B, C. On the third access, it needs to evict something. If it evicts B, then the \"eviction trace\" is _, _,B, where _ means \"nothing was evicted\". Consider a fully associative cache with 4 entries. Cache slots are numbered 0 to 3. On a miss, the cache must place the missed line into a slot. When breaking ties for cache placement (such as if there are multiple empty slots), we place the item in the cache slot with the the lowest number. The cache handles the access sequence in the first line below, producing the eviction trace in the next line: Access sequence: E,F,C,A,D,E,D,C,B,F,B,A Eviction trace: _,_,_,_,E,F,_,_,A,E,_,D We think we chose LRU, MRU, FIFO, or some other policy, but we forgot which one! Based on the access and eviction traces above, which eviction policy did we choose? v What is the absolute difference in number of misses between an optimal cache eviction policy given the complete trace of accesses versus our current strategy? integer (-] Save & Grade Single attempt Additional attempts available with new variants @","libVersion":"0.2.1","langs":"eng"}