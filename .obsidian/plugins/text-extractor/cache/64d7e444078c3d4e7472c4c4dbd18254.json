{"path":".obsidian/plugins/text-extractor/cache/64d7e444078c3d4e7472c4c4dbd18254.json","text":"122.3. Layout Score Given how disks operate, it should be clear that if we are allocating individual blocks (on the order of 4096 byte) to a file, we'll get the best sequential read performance from a disk if we can allocate files contiguously on disk. One way of expressing how well we do this is via something called /ayout score. We continue to use our definition of a \"contiguous\" block as one that is allocated on disk immediately after its logical predecessor in the file. We define the layout score as the fraction of blocks that could be allocated contiguously that are allocated contiguously. Since the first block of a file cannot be allocated contiguously (i.e., it has no predecessor), the layout score for a 1-block file is undefined, but for all files larger than a single block, the layout score is NumberO fContiguousBlocks/(Total Blocks — 1). A file system that allocates files in a single extent has layout score of 1; a file system that randomly throws blocks all over the disk has a layout score of approximately 0. We can use the layout score to compute a crude approximation of performance by assuming that contiguous blocks are accessed at the transfer rate of the drive and all other blocks require a seek plus one-half rotation plus the transfer time. However, layout score is not a perfect representation of the quality of the allocation of blocks on disk; which of the following might cause us to achieve better performance than the layout score suggests? o Two logically-adjacent blocks might be on the same cylinder, even if the second is not contiguous, so there would be no seek between them. o A disk block might appear contiguous but its logical predecessor could be the last block on cylinder ¢ while it is the first on cylinder i + 1 o Two logically-adjacent blocks might be on the same track, even if the second is not contiguous, so there would be no seek between them. o Two logically-adjacent blocks might be on the same platter, so even if the second is not contiguous, there would be no seek between them. o Not all seeks take the same amount of time, so if blocks are allocated on nearby tracks, the seektime for them would be smaller than the average seek time. o Not all seeks take the same amount of time, so if blocks are allocated particularly far away from each other, the seektime between them would be greater than the average seek time. Select all possible options that apply. @ Save & Grade Single attempt Additional attempts available with new variants @","libVersion":"0.2.1","langs":"eng"}