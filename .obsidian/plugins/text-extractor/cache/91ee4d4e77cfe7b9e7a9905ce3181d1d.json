{"path":".obsidian/plugins/text-extractor/cache/91ee4d4e77cfe7b9e7a9905ce3181d1d.json","text":"CP S C 310: Int rod uct ion to S oft w are E ngineering Cour s e W ebs ite h ttp s: //se.cs.u b c.ca/g o /310 Nick B radley & K athar ine K er r F or per s onal us e only , pleas e do not dis tr ibute on non-UB C domains . CP S C 310: Introduction to S oftware E ngineer ing A bout us … Nick B radley K athar ine K er r CP S C 310: Introduction to S oftware E ngineer ing W ait list • ~320 s eats in cour s e + labs . • W e hav e admitted ~360. • A ny people leav ing the cour s e before the add/drop date will jus t tak e us back to our ~320 s tudent target. • Unfor tunately , nobody els e will be admitted. W ait list CP S C 310: Introduction to S oftware E ngineer ing In P erson ( e x cep t Lab s) In P er s on: ● L ectures . A ttend any s ection: ○ 0800-0920 S WNG 121 (Nick) ○ 1530-1700 S WNG 222 (K athar ine) ● TA and Ins tr uctor oﬃce hour s . ● Quiz z es (in the CB TF). ● Final e x am. Online: ● Labs . They mus t be attended s y nchronous ly. CP S C 310: Introduction to S oftware E ngineer ing O nline resources ● S lides from lecture: ○ W ill be pos ted in adv ance of each lecture but may be updated dur ing the lecture. ● R eadings for all cour s e mater ial. ○ F rom a reference point-of-v iew thes e are much more compact than the s lides . ○ S tudio v ideos hav e als o been recorded for 95% of the mater ial. ○ R eadings and v ideos are all av ailable for the whole ter m. ○ https ://ubccps c.github.io/310 y ells at clouds Old man CP S C 310: Introduction to S oftware E ngineer ing Tod ay’ s p lan 1. What is S oftware E ngineer ing? 2. Cour s e Motiv ation 3. E x pectations 4. P roject Ov er v iew 5. Cour s e S y llabus [E d Laz ows ka][E d Laz ows ka][E d Laz ows ka][E d Laz ows ka] CP S C 310: Introduction to S oftware E ngineer ing Cross-cut t ing concerns In fo rm atio n S ecu rity; protect s ens itiv e infor mation from unauthor iz ed activ ities : ins pection, modiﬁ cation, recording, and dis r uption. E th ics; making decis ions that: • R es pect us er pr iv acy • P romote fair nes s • B eneﬁ t s ociety More than following r ules and av oiding legal trouble: • A dher ing to profes s ional codes • Nav igating ethical dilemmas • Under s tanding the impact of unethical practices y our life depends on code [https ://uplo a d .wikim ed ia .o r g /wikiped ia /c o m m o ns /2/20/Sky Tr a in_ P a s s ing _ B y _ On_ The_ B r id g e .jpg ] [B en Z or n] what is s e? CP S C 310: Introduction to S oftware E ngineer ing The proces s of trans for ming a mental plan of des ired actions for a computer into a repres entation that can be under s tood by the computer. — J ea n-M ic hel Ho c a nd A nh N g uy en-Xua n 210-Cent ric view CP S C 310: Introduction to S oftware E ngineer ing The proces s of trans for ming a mental plan of des ired actions for a computer into a repres entation that can be under s tood by the computer. — J ea n-M ic hel Ho c a nd A nh N g uy en-Xua n 310-Cent ric view S o cio -t ech n ical [http://www .infor mat ionisbeaut iful.net/visualizat ions/million-lines-of-code/] CP S C 310: Introduction to S oftware E ngineer ing A s long as there were no machines , programming was no problem at all; when we had a few weak computer s , programming became a mild problem, and now we hav e gigantic computer s , programming has become an equally gigantic problem. —Dijks tr a CP S C 310: Introduction to S oftware E ngineer ing what is 310 ? moder n s oftware dev cons tr uction 210: s pecial topics 410: 310: des ign team dev 319: CP S C 310: Introduction to S oftware E ngineer ing Course L earning O b ject ives 1. E v aluate s oftware engineer ing proces s es … 2. E licit, decons tr uct, and reﬁ ne  functional requirements and quality attr ibutes … 3. Dev is e and jus tify high- and low-lev el des igns … 4. Iterativ ely der iv e implementations   of a des ign of reas onable comple x ity… 5. C ar r y out the implementation  of a des ign incor porating ethical and s ecur ity… 6. Independently acquire and apply   moder n and unfamiliar technology… 7. V alidate s y s tems us ing both black-bo x and glas s -bo x approaches … lecture → all S E projects project → one ins tance A ll S E P rojects A ll S E P rojects A ll S E P rojects A ll SE P ro jec t s CP S C 310 P roject A ll S E P rojects s elf lear ning project → CP S C 310: Introduction to S oftware E ngineer ing A s much as I hated the project in the beginning...in the end y ou'll look back and go \"D A MN, I C A N' T B ELIEV E I W A S C A P A B LE OF MA K ING S OMETHING. \" It deﬁ nitely helps to build y our conﬁ dence as a programmer. — 310 Stud ent CP S C 310: Introduction to S oftware E ngineer ing Delib erate p ract ice ● P ractice an intentionally des igned s et of s kills . ○ The goal of the practice is mas ter y. ○ S kills are guided to emphas iz e s peciﬁ c abilities . ■ Much more eﬀ ectiv e than uns tr uctured repetition. Not enough to jus t ‘put in the time’. ■ Cons tant feedback es s ential for improv ement. ■ A dmittedly , this is not s uper fun, but is rewarding in the end. ● P opular iz ed by Gladwell’s 10,000 hour s chapter in Outlier s . ○ (B as ed on A nder s A nder s on’s res earch on mus icians .) CP S C 310: Introduction to S oftware E ngineer ing P roject d esign 1. E x per iential s oftware dev elopment e x per ience. 2. F ully bas ed around functional cor rectnes s . • Non-tr iv ial requirements , data and algor ithm heav y. • A s s igned requirements . • S peciﬁ ed env ironmental res tr ictions . 3. Integral quality focus . 4. Team-bas ed dev elopment. 5. Moder n s oftware dev elopment s tack. code policy der iv ativ e https ://w w w .cs .ubc.ca/~tmm/cour s es /cheat.html CP S C 310: Introduction to S oftware E ngineer ing Derivat ive cod e p olicy ● You mus t do y our own wor k. ● W e will check ev er y project for copy ing agains t all pas t s olutions (both public and pr iv ate), and generated v er s ions . ● E v er y one inv olv ed in the copy ing will get 0 for the project. ○ B oth the copy ing team and the team that was copied from. ● W e will for ward cas es to the dean’s oﬃce. ● Max s core in cour s e will be 50. A s s es s ed after ﬁ nal e x am. Derivat ive cod e p olicy Team A Team B (the res t is the s ame too, jus t hidden s o it can’t be copied again) Derivat ive cod e p olicy Team A Team B CP S C 310: Introduction to S oftware E ngineer ing Derivat ive cod e p olicy • Collaboration is a par t of s oftware engineer ing, it jus t has to be done in an appropr iate way. • Companies cannot s hip other people’s code contrar y to their licences , contracts , and commitments ; y ou can’t either. • F or collaboration, follow the one hour r ule. You can talk to other s about y our project. B ut: i. Not in front of any kind of s creen. ii. Not wr iting any thing down (paper, whiteboard, etc.). iii. You mus t wait one hour before s tar ting to wor k on y our s olution. Go for a walk, watch a s how , or do s omething els e. [https://www .cs.ubc.ca/~tmm/courses/cheat.html] CP S C 310: Introduction to S oftware E ngineer ing ● A dv anced LLMs e x is t. ● W e know many of y ou will us e them. ● They are s lowly gaining indus tr ial traction. ○ IP -related challenges are pr imar y concer ns . Co-P ilot , Chat G P T, et c. CP S C 310: Introduction to S oftware E ngineer ing <req uirement s, cod e> S ource CodeCurrentPractice Traditional Dev elopment P ractice Us er s / Cus tomer s Technical Teams <need s, feed b ack> CP S C 310: Introduction to S oftware E ngineer ing A s s is tiv e A gent <nat ural language req uirement s, cod e> S ource Code <req uirement s, cod e> S ource CodeCurrentPracticeEmergingPractice S ource Code A s s is tance Traditional Dev elopment P ractice Us er s / Cus tomer s Technical Teams <need s, feed b ack> <need s, feed b ack> CP S C 310: Introduction to S oftware E ngineer ing A s s is tiv e A gent <nat ural language req uirement s, e xist ing system> E x ecutable F eature A s s is tiv e A gent <nat ural language req uirement s, cod e> S ource Code <req uirement s, cod e> S ource CodeCurrentPracticeEmergingPracticeLong TermVision F ull S ource Code A bs traction S ource Code A s s is tance Traditional Dev elopment P ractice <need s, feed b ack> Us er s / Cus tomer s Technical Teams <need s, feed b ack> <need s, feed b ack> <valid at ion?>Increasing Abstraction CP S C 310: Introduction to S oftware E ngineer ing Miscond uct & Co-P ilot , Chat G P T, et c. ● You can us e LLMs in 310. ○ LLMs can generate 40% of the project code. ○ B ut claim they can wr ite 100%. ○ Figur ing out which 40% is the us eful code actually mak es the project harder. ● TA s will ONLY help with code y ou wrote y our s elf. ● A s with any company , y ou are res pons ible for the code y ou commit to y our repos itor y. ● You mus t under s tand and attr ibute code generated by an LLM. CP S C 310: Introduction to S oftware E ngineer ing Resp ect ful E nvironment E v er y one inv olv ed with CP S C 310 is res pons ible for under s tanding and abiding by UB C's R es pectful E nv ironment S tatement . ● E v er y one Includes : Your Teammate, TA ’s , Clas s mates , Cour s e Coordinator, and y our ins tr uctor s ● A ll the time: On piaz z a, dur ing OH, in Lab. CP S C 310: Introduction to S oftware E ngineer ing Teams 1. S oftware is built in teams , this project is no diﬀ erent. 2. You get to choos e y our teammate. This is y our decis ion. Mak e y our choice carefully as teams cannot be changed. 3. You will wor k in pair s . 4. Your par tner mus t be in y our lab s ection. 5. W eekly s cr um meetings with the TA . 6. Teams mus t be s et by the end of y our lab the week after add/drop. CP S C 310: Introduction to S oftware E ngineer ing ● A iming for ~144 on-tas k hour s . ○ 6 hour s per week * 2 people * 12 weeks . ● The project might tak e s lightly more or s lightly les s , depending on y our pas t e x per ience. ● C1 & C2 will probably be the mos t time cons uming. ● Ty pical failure cas es : ○ Ghos ting par tner => Treat them well. They are y our lifeline. ○ S tar ting at the las t minute => S tar t ear ly to get the mos t help from A utoTes t/TA s . P roject e xp ect at ions CP S C 310: Introduction to S oftware E ngineer ing P roject assessment 1. Quality is impor tant. S oftware mus t wor k. 2. A ll project ev aluation will tak e place us ing functional tes ting. 3. Two main tes t paths e x is t for the project: a. Unit tes ting within y our own project. (B es t, by far ) b. R ate-limited integration tes ting with our pr iv ate s uite. (P oor ) 4. You are going to need to do both, but es pecially (a). W r iting y our own tes ts is the bes t way to ‘wor k s mar t’ in this clas s . CP S C 310: Introduction to S oftware E ngineer ing A utoTest ● F or mativ e as s es s ment: ○ A utoTes t is a tool to help y ou under s tand how well y our project confor ms to it’s s peciﬁ cation. ○ This is s imilar to a comprehens iv e cus tomer acceptance tes t s uite in indus tr y. ● While we do us e A utoTes t to as s es s y our grade (aka as s ummativ e as s es s ment), we des igned it pr imar ily to guide y our lear ning, not to blindly ev aluate it. ● F eedback will be communicated with a buck et ev aluation along with areas for improv ement. ○ S imilar to how a cus tomer would reﬂ ect on y our progres s . CP S C 310: Introduction to S oftware E ngineer ingCP S C 310: Introduction to S oftware E ngineer ing Deliverab les 1. Ch eckp o in t 0 ( C0) : T h u rs Jan 16 @ 1800 ( in d ivid u al) 2. Checkpoint 1 (C1): F r i F eb 14 @ 1800 (team) 3. Checkpoint 2 (C2): F r i March 14 @ 1800 (team) 4. Checkpoint 3 (C3): F r i A pr il 4 @ 1800 (team) Deadlines are ﬁ x ed; lates are not pos s ible. des ign decis ions cour s e CP S C 310: Introduction to S oftware E ngineer ing A uthor itativ e r ubr ic on cour s e webpage. 1. 25% P roject implementation: ● C0/C1/C2/C3; equally weighted. ● C0 indiv idual, other s with one (the s ame!) par tner. 2. 30% Quiz z es : ● Q0/Q1/Q2/Q3; equally weighted. 3. 40% Final E x am 4. 5% Jour nals : ● 10 Jour nals due weekly , s tar ting F r iday of week 2 ● 1% each ● = 5% bonus for both quiz z es and project if all are completed A ssessment p rop or t ions CP S C 310: Introduction to S oftware E ngineer ing Three P riz es: 1% G rad e Bonus A warded dur ing the ﬁ nal lecture The B rain Whomev er ans wer s the mos t ques tions on piaz z a. The S peed Demons The team that reaches E x tending ﬁ r s t dur ing C1, C2 and C3. The Creativ es The team with the cooles t UI for C3 as v oted by y our TA s . CP S C 310: Introduction to S oftware E ngineer ing Journals ● Indiv idual reﬂ ection about y our activ ities and how they align (or div erge) with s tandard s oftware engineer ing practice. ● Idea: reduce ov erall eﬀ or t by thinking upfront about des ign decis ions . ● They als o prov ide an oppor tunity to practice cour s e content and prepare for quiz z es and the ﬁ nal. ● Jour nals will be rev iewed by TA s to facilitate dis cus s ion dur ing lab. CP S C 310: Introduction to S oftware E ngineer ing Q uiz z es & ﬁnal e xam ● Quiz z es : ○ Us ually 20-40 ques tions . ○ A ll map to cour s e lear ning areas . ○ Q0 : W ed Jan 29 - S at F eb 1 ○ Q1 : W ed F eb 26 - S at Mar 1 ○ Q2 : W ed Mar 19 - S at Mar 22 ○ Q3 : W ed A pr 2 - S at A pr 5 ● Final e x am: ○ 120-160 ques tions . ○ A ll map to core cour s e lear ning areas . ● Quiz z es and Final E x am are cumulativ e. ○ P ractice quiz z es will be prov ided, but no practice ﬁ nal. CP S C 310: Introduction to S oftware E ngineer ing O n close-end ed q uest ions ● A ll quiz and ﬁ nal ques tions will be clos e-ended (tr ue/fals e, multiple choice, dropdown). ● Thes e are nev er meant to be tr ick ques tions . ● F or each ques tion, we hav e a s entence that e x plains why the ans wer is tr ue or fals e. If y ou cannot cons tr uct a r eas onable cor res ponding s entence for y our ans wer, re-ev aluate whether y ou think the other res pons e mak es s ens e. E x ample Q: “The W ater fall proces s is highly adaptiv e and accommodates changes to project requirements with eas e.” ● Tr ue: ● F als e: CP S C 310: Introduction to S oftware E ngineer ing O n close-end ed q uest ions ● A ll quiz and ﬁ nal ques tions will be clos e-ended (tr ue/fals e, multiple choice, dropdown). ● Thes e are nev er meant to be tr ick ques tions . ● F or each ques tion, we hav e a s entence that e x plains why the ans wer is tr ue or fals e. If y ou cannot cons tr uct a r eas onable cor res ponding s entence for y our ans wer, re-ev aluate whether y ou think the other res pons e mak es s ens e. E x ample Q: “The W ater fall proces s is highly adaptiv e and accommodates changes to project requirements with eas e.” ● Tr ue: The W ater fall proces s is an agile approach. ● F als e: The W ater fall proces s is known for its lack of ﬂ e x ibility in handling changing requirements . CP S C 310: Introduction to S oftware E ngineer ing O n close-end ed q uest ions ● A ll quiz and ﬁ nal ques tions will be clos e-ended (tr ue/fals e, multiple choice, dropdown). ● Thes e are nev er meant to be tr ick ques tions . ● F or each ques tion, we hav e a s entence that e x plains why the ans wer is tr ue or fals e. If y ou cannot cons tr uct a r eas onable cor res ponding s entence for y our ans wer, re-ev aluate whether y ou think the other res pons e mak es s ens e. E x ample Q: “The W ater fall proces s is highly adaptiv e and accommodates changes to project requirements with eas e.” ● Tr ue : The W ater fall proces s is an agile approach. ← Does n’t mak e s ens e. ● F alse : The W ater fall proces s is known for its lack of ﬂ e x ibility in handling changing requirements . ← Mos t common water fall cr itique. CP S C 310: Introduction to S oftware E ngineer ing ● F or the project: ○ Multiple TA oﬃce hour s / week. ■ Oﬃce hour s ev er y day. 2 TA /OH week of proj. deadlines . ■ Hour s clos es t to the deadlines will alway s be bus ies t. ○ 22 lab hour s / week. ■ E v er y lab will be s taﬀ ed by multiple TA s . ○ P iaz z a. ● F or cour s e content and general s oftware engineer ing ques tions : ○ Ins tr uctor oﬃce hour s . G et t ing help CP S C 310: Introduction to S oftware E ngineer ing How to succeed in t his class ● Do NO T leav e project wor k until r ight before the checkpoint deadline. S er ious ly , don’t. W e look ed at patter ns from pas t y ear s , and the groups who did bes t, s tar ted ear ly. They didn’t get ev er y thing r ight at ﬁ r s t, but they left thems elv es time to recov er from ear ly is s ues . ● A ctiv ely wor k with y our project par tner : they are y our bes t res ource in this cour s e! ● E ngage with the clas s par ticipation activ ities -- thes e will be great practice for the quiz z es and ﬁ nal (and will help y ou get into thinking lik e a profes s ional s oftware engineer ). ● A lway s tr y to wonder about why s omething is the way it is , rather than jus t memor iz e a rote ans wer. S E decis ions are often on a continuum and being able to jus tify any decis ion is a core S E quality. W eb : ht t p s: //se.cs.ub c.ca/go/310 Classy: ht t p s: //cs310.st ud ent s.cs.ub c.ca Join P iaz z a. G E T S TA R TE D O N C0! - S t ar t read ing t he C0 sp ec - Rep os p rovisioned tomorrow : ht t p s: //git hub .st ud ent s.cs.ub c.ca Things to d o T O D A Y : • You hav e to log on to GitHub enter pr is e us ing y our cwl and mak e s ure y ou hav e a repo. • Tak e the welcome s ur v ey for par ticipation credit ( link als o on the cour s e webs ite ) B y F rid ay of week 2! • E nrol in P iaz z a -- mak e s ure y ou can get in. (link on cour s e webs ite)","libVersion":"0.2.1","langs":""}