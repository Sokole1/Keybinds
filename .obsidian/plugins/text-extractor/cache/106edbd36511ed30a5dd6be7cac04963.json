{"path":".obsidian/plugins/text-extractor/cache/106edbd36511ed30a5dd6be7cac04963.json","text":"R4.1. Counting Cache Misses For a 8KB (8192 bytes) direct-mapped cache with 128-byte blocks, consider the following code snippet. #define SIZE 815 long A[SIZE]; //long is 8 bytes long total = 0; for (int i = 0; i < 4; i++) { for (int j = 0; j < SIZE; j += 8) { total += A[jl; } } For this question, consider accesses to array A, only. Assume array A is allocated starting at address 0x200000000. Assume no elements of A are in the cache when the code begins running for each part below. How many misses (on array A) will this code produce? integer (2] If we change the array to contain 1824 elements, how many misses (on array A) will this code produce? integer -] If we change the array to contain 5120 elements, how many misses (on array A) will this code produce? integer (-] Save & Grade Single attempt Additional attempts available with new variants @","libVersion":"0.2.1","langs":"eng"}