{"path":".obsidian/plugins/text-extractor/cache/6757e25ee0c0649fabeda84efe084132.json","text":"Question 2. (4 points) The IEEE 754 single precision floating point system uses base # = 2 and has 23 bits in its significand (mantissa), plus one more leading bit which is not explicitly stored. It has 8 bits for the exponent and one bit for the sign, for a total of 32 bits. The rounding unit is approxi- mately equal to 5.96 x 10~% and the largest finite positive number that can be represented on the system is approximately 3.4 x 10%. All integers with seven or fewer decimal digits can be converted exactly into a single precision value. The following MATLAB script was executed: >> x=single(le6); % x=1,000,000 -- represented in single precision >> yl=sqrt(x+1/x); >> y2=sqrt(x); >> z=yl-y2; In other words, we are trying to compute z = y/a + % â€” . (a) Upon running the script, we have observed that y1 is equal to y2 on the floating point sys- tem. Explain why. (In your answer please refer specifically to the numbers and information given in this question.)","libVersion":"0.2.1","langs":"eng"}