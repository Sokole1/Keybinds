{"path":".obsidian/plugins/text-extractor/cache/dfaa82fd00488dce296ec010830a16cd.json","text":"2. Now, suppose that ¢ does not contain an all-Z; clause. We could fix the truth value of z; to T’ (True), call the SATISFIABLE() procedure on the smaller instance obtained by plugging in this truth value, and see what we can learn. This smaller instance, which we’ll call ¢, —7, is the SAT instance returned by the following procedure when V =T procedure SIMPLIFY(¢,%, V) > ¢ is a satisfiable SAT instance such that: > if V =T then ¢ contains no all-Z; clause, and > if V = F then ¢ contains no all-z; clause ¢ ¢ if V ==T then remove any clause containing z; from ¢’ remove all occurrences of literal T; from clauses of ¢’ if V == F then remove any clause containing Z; from ¢’ remove all occurrences of literal z; from clauses of ¢’ return the resulting SAT instance ¢’ (which may be empty) Similarly, let ¢,,—p be the SAT instance returned by the procedure when V = F, assuming that ¢ has no all-z; clause. For example, if ¢ is (@ VT2 VazVag) A(z2 VI3V T5) A (T1 VT2 V 23), then when we plug in T for z; we get: (TVTa Va3 V) A(@e VI VTs) A (F VT Ves), and 80 ¢z, =7 is (22 VT3 VEs) A (T2 V 23). (a) (1 mark) Suppose that ¢ is satisfiable, contains no all-z; clause, and SATISFIABLE(¢,,—7) returns True. Which, if any, of the following statements must be true? Check all that apply. O Thereis a satisfying assignment for ¢ in which z is True. O Thereis a satisfying assignment for ¢ in which z; is False. (b) (1 mark) Suppose that ¢ is satisfiable, contains no all-z; clause, and SATISFIABLE(¢z,~7) returns True. Which, if any, of the following statements must be true? Check all that apply. O There is no satisfying assignment for ¢ in which z; is True. O There is no satisfying assignment for ¢ in which z; is False. 4 (c) (1 mark) Suppose that ¢ is satisfiable, contains no all-Z; clause, and SATISFIABLE(¢z,~7) returns False. Which, if any, of the following statements must be true? Check all that apply. O Thereis a satisfying assignment for ¢ in which z is True. O There is a satisfying assignment for ¢ in which z; is False.","libVersion":"0.2.1","langs":"eng"}