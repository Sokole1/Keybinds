{"path":".obsidian/plugins/text-extractor/cache/92bfba1d2eb7316caefded125ac17241.json","text":"122.5. Comparing single-extent allocation to block-based allocation Let's compare the performance of a file allocated as a single extent to one allocated in blocks. A disk with 8 platters rotates at a speed of 10000 RPM and has an average seek time of 7.9 ms. A track holds 32 sectors of 4096 bytes each. Given a file of 352 4096-byte blocks, how much faster (in terms of Speedup) can we read the file if we allocate a single extent compared to reading each block assuming blocks are allocated randomly across the disk? Assume the following: « Extents begin on cylinder boundaries. « In extent-based allocation, we allocate all the blocks on a single track before moving to another track. « The disk has a track buffer that allows it to read an entire track, starting at any sector on the track. « |t takes the average seek time to move between two adjacent cylinders (this is not a realistic assumption). Round your answer to 1 decimal digit. number (1 digit after decimal) (-] Save & Grade Single attempt Additional attempts available with new variants @","libVersion":"0.2.1","langs":"eng"}