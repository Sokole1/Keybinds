{"path":".obsidian/plugins/text-extractor/cache/25694d60b7c42e68e34ecfe172093848.json","text":"2. Here is Dijkstra’s greedy algorithm for the Weighted Shortest Paths problem. This pseudocode keeps track of the shortest path from s to each node u that is added to the tree. We’ll denote this distance by d[u]. Try out the algorithm on a small example. procedure WSP-GREEDY-DIJKSTRA(s) d[s] + 0 T + {s} T is the set of nodes in the tree while T' # V do find a node v ¢ T that minimizes the quantity min,er d[u] + w(u,v) addvto T d[v] + minyer dfu] + w(u,v) 3. In each iteration of the while loop, to find the needed v, we could enumerate through each edge (u,v) of the graph, checking if u € T' and v € T and keeping track of the minimum value of d[u]| + w(u,v) for such pairs. Give an upper bound on the time that this approach takes, and using this, get a total upper bound on the runtime of the algorithm.","libVersion":"0.2.1","langs":"eng"}