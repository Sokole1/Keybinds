{"path":".obsidian/plugins/text-extractor/cache/a74f93238dca63123bba9eacccff0115.json","text":"Consider the following code: uintl6_t datal4]l; for (int i = 0; i < 4; i++) { datal[i] = ix10; } uintl16_t *ptr = data + 2; *ptr = 300; *(ptr+l) = 400; Assume that the data array begins at address 9x100. Below we ask for bytes in memory as hexadecimal. Your answer should give us the bytes from memory in left-to-right (lowest address to highest address) order. Now, give the 8 bytes in memory in hexadecimal beginning at address 0x100 assuming that this is a little- endian machine: 0x e Next, give the 8 bytes in memory in hexadecimal beginning at address 9x100 assuming that this is a big- endian machine: 0x (=] Assume we change 300 to 30 and 400 to 40 in the code above and then we change the type uint16_t everywhere it appears to a different type. Which possible new type would guarantee the contents of memory in the data array would be identical on a big- and little-endian machine? O char O inti6_t O uint64_t O uint8_t O int","libVersion":"0.2.1","langs":"eng"}