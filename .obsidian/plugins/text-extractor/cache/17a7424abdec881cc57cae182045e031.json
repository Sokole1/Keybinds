{"path":".obsidian/plugins/text-extractor/cache/17a7424abdec881cc57cae182045e031.json","text":"GitHub Copilot & &P When you mask an n x d array withann x 1 mask, the IME QN T (e ETo [T Yo [ [e]aTe R { g ToWoTo) [V 1 E o) s N1 4 ) A (o Mol (=T ) ann x dboolean mask. Each element of the mask is then VE=Yo B (o RV (=Y hd ToN oTo) g (=X ool g o 1Yo M Â£o) Ao} i (g TN =) VA o (=Y CREEET example: import numpy as np # create a sample array arr = np.array([[1, 2, 31, [4, 5, 6], [7, 8, 911) # create a sample mask mask = np.array([True, False, Truel) # mask the array with the mask masked_arr = arr[mask] print(masked_arr) This will output: array([[1, 2, 3], [7, 8, 911) [IRGIERE o] AR (TN (o [ QVETAE o] LT WA W W oTe T Ty =T 1Y) with True values in the rows that you want to keep and False values in the rows that you want to discard. When you use this mask to index the arr array, the mask is (o] ETe [ IS (Yo [ o]aTe R{ g TN eXe] [V]0 s [ N R R - VA o R T CRET N WD d boolean mask. The resulting mask is then used to select the corresponding rows of the array, which are returned as a new array. In this case, the resulting masked_arr variable contains only the rows of the arr array that are True in the (P E A","libVersion":"0.2.1","langs":"eng"}