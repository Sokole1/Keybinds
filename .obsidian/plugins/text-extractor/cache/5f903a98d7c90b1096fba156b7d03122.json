{"path":".obsidian/plugins/text-extractor/cache/5f903a98d7c90b1096fba156b7d03122.json","text":"3 Matching Preferences Here is an instance of the SMP (stable matching problem) with two applicants and two employers that has at least two stable solutions: er: ap,ap ap: ey e ey az,a1 az: el e The matching {(e1,a1), (e2,a2)} is stable since both employers are matched with their top choice. Also the matching {(e1, a2), (e2, a1)} is stable since both applicants are matched with their top choice. The matching {(e1,a1), (e2,a2)} is best for both employers, while matching {(e1, a2), (e2,a1)} is best for both applicants. More generally, let I be an SMP instance with (at least) two different stable matchings M and M’. We say that employer e prefers matching M over M’ if e prefers its match in M over its match in M’. That is (using notation from the worksheet) if (e,a) € M and (e,a’) € M’, then a >. d'. 1. (3 points) Show an instance of SMP with four applicants and four employers, and show two stable matchings M and M’ for this instance, such that two employers prefer M to M’ while the remaining two employers prefer M’ to M. Hint: Build on the example given above. (Make sure to provide a short justification of your answer.) 2. (1 point) Let G(I, M, M’) be the bipartite graph whose nodes are employers and applicants of I, and with an edge between e and a if either (e,a) € M or (e,a) € M'. Is the graph G(I,M, M) for your SMP instance of part 1 connected? Give a short justification. (Note: While this question refers to graphs, you don’t need any knowledge of graph algorithms to complete the question.) 3. (2 points) In this and the subsequent parts of the problem let I be an instance with n > employers and n applicants, with distinct stable matchings M and M’. Without loss of generality, let e; be an employer that prefers M over M’, and let e; be matched with a; in M, that is (e1,a1) € M. Let ey be the employer matched with a; in M’, and let ay be the applicant matched with ey in M. That is, we have: M M (e1,a1) | (e1,7?) (e2,a2) | (e2,a1) Show that ez >4, €1 and that az >e, a1.","libVersion":"0.2.1","langs":"eng"}