{"path":".obsidian/plugins/text-extractor/cache/980e132a8a2a483fc56583d8185a3c67.json","text":"CPSC 317 Computer Networking Transport Layer UDP Maryam R.Aliabadi mraiyata@cs.ubc.ca 1CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi READING • Reading: 3.1, 3.2, 3.3 2CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Learning Goals • Explain the need and main purpose of the transport layer • Define multiplexing at the transport level (i.e., ports) • Understand the types of services that transport can support • Compare and contrast the important services provided by UDP and TCP • Identify applications that (can) make use of TCP (UDP) and explain why • Explain the purpose of the fields of the UDP header • Use UDP sockets in Java 3CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Transport Protocol purposes 4 • Provide logical communication between application processes running on different hosts • Multiplexing of communication to different applications on end hosts • Provide services to applications application transport network data link physical application transport network data link physical network data link physical network data link physical network data link physical network data link physicalnetwork data link physical CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Logical End-to-end Communication • Network layer provides logical communication between hosts (terminated at the interface) • Transport layer: provides logical communication between processes (terminated at the application) • Transport protocols run in end systems • send side: breaks app messages into segments, passes to network layer • recv side: reassembles segments into messages, passes to app layer 5 Application Transport Network Link Host1 App1 Transport Network Link Host2 App2 CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Multiplexing Applications Over Transport An application is identified by a transport layer address: <IP address, port> IP address: gets you to the host (technically the interface, but the interface is part of the host) Port number: gets you to some application process or thread on that host • Historically a 16 bit unsigned number (0 – 65535) • DICT servers – 2628, DNS servers – 53, HTTP servers (conventionally) – 80 • And there are hundreds more: https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers 6CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi List of Possible Services 7 • Partial delivery • Reliable delivery • Ordered delivery • Flow control • Congestion control • Bidirectional • Unidirectional • Connection-oriented • Connection-less • Segmentation • Stream-oriented • Message-oriented • Non-duplication CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi The Transport Big Picture 8 Reliable stream Unreliable packet Connection No connection Reliable ordered delivery Best effort Flow/Congestion control Nope Possible delays No (transport level) delay TCP UDP CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Transport service requirements of common applications 9 Application Data loss Bandwidth Time Sensitive File transfer No loss Elastic No E-mail No loss Elastic No Web No loss Elastic No Real-time audio Loss-tolerant 5Kbps-1Mbps 100’s msec Real-time video Loss tolerant 10kbps-5Mbps 100’s msec Stored audio Loss tolerant Same 1’s sec Stored video Loss tolerant Same 1’s sec Interactive games Loss tolerant 10kbps up 100’s msec Instant messaging No loss Elastic 1’s sec CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Internet applications and transport protocols 10 Application Application layer protocol Transport protocol Email SMTP [RFC 2821] Remote shell access Telnet [RFC 854] SSH [RFC 4253] Web HTTP [RFC 2616] Real-time multimedia Proprietary (Zoom) Internet telephony Proprietary (Skype) Domain name DNS [RFC 1035] Dictionary lookup DICT [RFC 2229] CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi UDP 18CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi UDP segment Format 19 source port # dest port # 32 bits Application data (message) UDP segment format length checksum Length (in bytes) of UDP segment, including header Error detection CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Checksums • Appear at transport layer, network layer, and link layer • Serve a different purpose at each layer • Same algorithm at transport and network layer 20CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Checksums 21 Sender: • Computes some function on the data • Adds the checksum value to the data • Sends the data and checksum Receiver: • Computes the same function on the received data • Check if computed checksum equals received checksum value • NO - error detected • YES - no error detected • Not all errors can be detected Goal: detect “errors” (e.g., flipped bits) in transmitted segment CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Checksum algorithm • Treat the data as a sequence of 16-bit integers • Function: addition (1’s complement sum, carry out added back in) of all these 16 bit integers • Checksum is the 1’s complement of the computed value (flip all the bits) • Verifying is computing the same function over the data and checksum (correct if 0) 22CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Checksum example (5 bit integers) 23 1 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Checksum example (5 bit integers) 24 1 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 --------- 1 0 0 1 1 0 0 Sum and carry CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Checksum example (5 bit integers) 25 1 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 --------- 0 1 1 0 0 1 0 --------- 0 1 1 1 0 Sum Add the carry CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Checksum example (5 bit integers) 26 1 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 --------- 0 1 1 0 0 1 0 --------- 0 1 1 1 0 1 0 0 0 1 Sum Add the carry 1’s complement CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Verifying The Checksum 27 1 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 0 0 0 1 --------- 1 0 1 1 1 0 1 1 0 --------- 1 1 1 1 1 0 0 0 0 0 Sum and carry Add the carry 1’s complement CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Clicker Question Will the Internet checksum be able to detect when one bit has been erroneously changed? A. Yes B. No C. Sometimes 28CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Clicker question Will the Internet checksum be able to detect when two bits have been erroneously changed? A. Yes B. No C. Sometimes 30CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Verifying The Checksum 32 1 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 0 0 0 1 --------- 1 0 1 1 1 0 1 1 0 --------- 1 1 1 1 1 0 0 0 0 0 Sum and carry Add the carry 1’s complement CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Verifying The Checksum 33 Sum and carry Add the carry 1’s complement 1 1 0 1 0 0 1 1 0 1 1 0 0 1 0 1 0 0 1 1 1 0 0 0 1 --------- 1 0 1 1 1 0 1 1 0 --------- 1 1 1 1 1 0 0 0 0 0 CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Socket Programming 34CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi UDP Sockets 35CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi UDP Communication in Java • One more Socket class to learn about • DatagramSocket • And one new message class • DatagramPacket 36CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Datagram Socket Class • Two commonly used constructors • DatagramSocket(int port) • DatagramSocket() – let the system choose any available port • Send a message using send • socket.send(DatagramPacket packet) • Receive a message using receive • socket.receive(DatagramPacket packet) • The incoming information is stored in the provided packet 37CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Datagram Packet Class • Two commonly used constructors • DatagramPacket(byte[] buf, int length) • for receiving messages • DatagramPacket(byte[] buf, int length, InetAddress addr, int port) • for sending messages • The data comes from or is stored into the provided buffer 38CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi An Example Server DatagramSocket socket = new DatagramSocket(4445); void echo() { byte[] buf = new byte[256]; DatagramPacket packet = new DatagramPacket(buf, buf.length); socket.receive(packet); InetAddress address = packet.getAddress(); int port = packet.getPort(); int length = packet.getLength(); packet = new DatagramPacket(buf, length, address, port); socket.send(packet); } 39CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi An Example Client DatagramSocket socket = new DatagramSocket(); String ping(String hostname, int port, String msg) { byte[] buf = msg.getBytes(); byte[] recvbuf = new byte[256]; InetAddress address = InetAddress.getByName(hostname); DatagramPacket packet = new DatagramPacket(buf, buf.length, address, port); socket.send(packet); packet = new DatagramPacket(recvbuf, recvbuf.length); socket.receive(packet); String received = new String(packet.getData(), 0, packet.getLength())); return received; } 40CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi In-class activity • ICA41 CPSC 317 2023W2 © 2021 41CPSC 317 – Computer Networking : Transport Layer - UDP Maryam R.Aliabadi Next Topic State Machines 42","libVersion":"0.2.1","langs":""}