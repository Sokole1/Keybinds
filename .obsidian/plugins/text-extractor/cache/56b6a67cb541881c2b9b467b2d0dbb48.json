{"path":".obsidian/plugins/text-extractor/cache/56b6a67cb541881c2b9b467b2d0dbb48.json","text":"6 Planning your summer vacation using dynamic programming Dr. Tsulo, an alien computer scientist, is planning their summer holiday. They will divide the holiday between two locations A and B, possibly moving between them several times, with the following constraints: e Dr. Isulo was given a gnaranteed 100%-correct weather forecast for both locations by a medium with a crystal ball, and wants to maximize the number of days with “good” weather in their current location. o After moving from one location to the other, Dr. Isulo must remain in this new location at least three days before moving back (reaching the last day of Summer does not count as “moving back”). So, for instance, if Dr. Tsulo moves from B to A on day 10, then the earliest they can move back to location B would be on day 13. Note that day 1 connts as moving to a new location. e Moving from one location to the other incurs a fixed cost c. So the input to the problem will be a pair of arrays with n elements (one for location A and one for location B), where element @ represents the weather on day i and is either “good” or “had”. The output should be an array of the same length where element i is either A (Dr. Isulo will spend day 7 in location A) or B. We are looking to maximize the number of days where the weather at Dr. Isulo’s location is “good” minus ¢ times the number of location changes. For instance, if the input is A fgood’, “bad’, “bad”, “good”, “good”, “good’, “good”, “good”, “bad” B “good”, “bad”, “good”, “good”, “good’, “bad”, ‘“bad”, *bad”,* ‘good” c 0.6 and Dr. Isulo decides to spend days 1 to 5 in location B, and 6 to 9 in location A, then the value of the objective function will be 4 (days 1 to 3) + 3 (days 6 to 9) - 0.6 (moving from B to A) ~ 6.4. On the other hand, if Dr. Isulo decides to spend days 1 to 5 in location B, days 6 to 8 in location A and day 9 in location B, then the value of the objective function will be 4 (days 1 to 5) + 3 (days 6 to 8) -+ 1 (day 9) - 1.2 (moving from B to A and then from B to A) = 6.8. We will denote by c4(i,7) the number of days of good weather between day i and day j, inclusive, at location A. The function cp(i, 5) is defined the same way for location B. 1. [6 marks| Let V4[i] be the highest possible value of the objective function for days 1 to i, assuming Dr. Isulo is at location A on day 4. Similarly, let Vp[i] be the highest possible value of the objective function for days 1 to 4, assuming Dr. Isulo is at location B on day i. Complete the following recurrence relation that defines the value Vy[i] (a symmetric recurrence can be written for Vgli], but we will not ask for it). Note: you can complete the other questions in this section without the answer to this one. 0 ifi=0 . ifi>0andi< Vali] = e D","libVersion":"0.2.1","langs":"eng"}