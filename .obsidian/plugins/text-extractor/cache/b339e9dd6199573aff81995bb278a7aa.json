{"path":".obsidian/plugins/text-extractor/cache/b339e9dd6199573aff81995bb278a7aa.json","text":"Consider the following y86 program 1: 2: irmovg 1, %rax 3: irmovg 10, %rbx 4: irmovg 1, %rcx 5: 6: loop_start: 7: rrmovq %rax, S%rdi 8: addq %rcx, %rax 9: rrmovq %rbx, %rbp 10: subq %srdi, S%rbp 11: jg loop_start 12: 13: loop_end: 14: mrmovq @x763(%rl@), %r9 15: rrmovq %rill, %ril3 16: subq %ri12, %rile@ 17: subq %r8, %rill 18: subq %ri12, %r9 19: andq %rl@, %rdx 20: Assume a pipelined implemention with no forwarding and a branch prediction algorithm that predicts taken for backward branches and not taken for forward branches. For how many cycles will the pipeline stall due to hazards resulting from data dependencies? integer (-] How many cycles will be squashed/cancelled? integer -]","libVersion":"0.2.1","langs":"eng"}