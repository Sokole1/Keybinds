{"path":".obsidian/plugins/text-extractor/cache/726a761d4ef18cefd04e75ce41bcb9b0.json","text":"To d a y • Le ar n i n g o u t c o m e s • De s c r i b e wh a t a p r o c e s s o r d o e s wh e n w e ma k e s a n i n c o r r e c t p r e d i c t i o n • Ho w w e ’ l l g e t t h e r e • Re v i e w h o w / w h e n a m i s - pr e di c t ha ppe ns . • Pr a c t i c e r e a rr a n g i n g l o o p s t o i m p r o v e p r e d i c t i o n b e h a v i o r . CP S C 3 1 3 1 Re c a l l • To m i t i g a t e c o n t r o l h a z a r d s d u e t o c o n d i t i o n a l b r a n c h e s , w e s a i d th a t w e c o u l d m a k e a gu e s s (e . g. , p r e d i c ti o n ) a n d th e n k e e p ex e c u t i n g b a s e d o n t h a t p r e d i c t i o n . • Bu t : W h a t d o w e d o i f t h a t p r e d i c t i o n i s w r o n g ? CP S C 3 1 3 2 Mi s - Pr e d i c t i o n • Wh a t h a p p e n s i f y o u a r e w r o n g ? • Co n s i d e r : ir m o v q 0x 1, % ra x ir m o v q 0x 1, % rb x su b q % ra x , % rb x je s k i p ir m o v q 0x 5000, % rc x ir m o v q 0x 5000, % rd x <m o r e i n s t r u c t i o n s h er e> sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x CP S C 3 1 3 3 Le t ’ s a s s u m e t h a t ou r p r e d i c t i on a l g or i t h m i s “ n e v e r t a k e n ” Yo u h a v e t w o b a d i n s t r u c t i o n s i n t h e p i p e l i n e ! • Th a t i s , i n s t r u ct i o n s y o u s h o u l d n o t h a v e e x e cu t e d ! • So w h a t d o y o u d o ? ? ? Yo u c a n c e l o r s q u a s h o r q u a s h t h e m ! So : • In t h e b e s t c a s e , c o n d i t i o n a l b r a n c h e s i n c u r n o p e n a l t y • In t h e w o r s t c a s e ( w h e r e y o u mi s p r e d i c t ), i t ’ s n o wo r s e th a n i f y o u ’ d d o n e n o p r e d i c ti o n ) Br a n c h M i s - Pr e d i c t s ( 1 ) CP S C 3 1 3 4 ad d q % ra x , % rb x De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y R[ % rc x ] = 1 , R [% rd x ] = 1 R[ % ra x ] = 1 0 , R [% rb x ] = - 10 ad d q % ra x , % rb x je S k ip irm o v q 0x 5000, % rc x irm o v q 0x 5000, % rd x Sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x Br a n c h M i s - Pr e d i c t s ( 2 ) CP S C 3 1 3 5 ad d q % ra x , % rb x va l A =R [ % ra x ]= 10 va l B =R [ % rb x ]= - 10 Ex e c u t e Me m o r y Wr i t e b a c k je ski p De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y R[ % rc x ] = 1 , R [% rd x ] = 1 R[ % ra x ] = 1 0 , R [% rb x ] = - 10 ad d q % ra x , % rb x je S k ip irm o v q 0x 5000, % rc x irm o v q 0x 5000, % rd x Sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x Br a n c h M i s - Pr e d i c t s ( 3 ) CP S C 3 1 3 6 ad d q % ra x , % rb x va l A =R [ % ra x ]= 10 va l B =R [ % rb x ]= - 10 va l E = va l A + va l B =0 ZF = 1 Me m o r y Wr i t e b a c k je ski p ne x t PC = va l P Ex e c u t e Me m o r y Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % rc x De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y R[ % rc x ] = 1 , R [% rd x ] = 1 R[ % ra x ] = 1 0 , R [% rb x ] = - 10 ad d q % ra x , % rb x je S k ip irm o v q 0x 5000, % rc x irm o v q 0x 5000, % rd x Sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x As s u m e w e p r e d i c t N O T T AK E N Fe t c h n e x t i n st r u c t i o n Br a n c h M i s - Pr e d i c t s ( 4 ) CP S C 3 1 3 7 ad d q % ra x , % rb x va l A =R [ % ra x ]= 10 va l B =R [ % rb x ]= - 10 va l E = va l A + va l B =0 ZF = 1 Wr i t e b a c k je ski p va l P Cn d (0 , ’ e ’ ) Me m o r y Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % rc x va l C = 0x 5000 Ex e c u t e Me m o r y Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % r dx De c o d e Ex e c u t e Me m o r y Wr i t e b a c k Fe t c h De c o d e Ex e c u t e Me m o r y R[ % rc x ] = 1 , R [% rd x ] = 1 R[ % ra x ] = 1 0 , R [% rb x ] = - 10 ad d q % ra x , % rb x je S k ip irm o v q 0x 5000, % rc x irm o v q 0x 5000, % rd x Sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x Uh o h ! W e c a n n o w e v a l u a t e t h e c o n d i t i o n , a n d i t t u r n s o u t we s h o u l d h a v e j u m p ed ! Br a n c h M i s - Pr e d i c t s ( 5 ) CP S C 3 1 3 8 ad d q % ra x , % rb x va l A =R [ % ra x ]= 10 va l B =R [ % rb x ]= - 10 va l E = va l A + va l B =0 ZF = 1 R[ % rb x ] = 0 je ski p va l C =s k i p Cn d (0 , ’ e ’ ) Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % rc x va l C = 0 x 5 0 0 0 va l E = 0x 5000 Me m o r y Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % r dx va l C = 0x 5000 Ex e c u t e Me m o r y Wr i t e b a c k a ddq % rc x , % r bx De c o d e Ex e c u t e Me m o r y R[ % rc x ] = 1 , R [% rd x ] = 1 R[ % ra x ] = 1 0 , R [% rb x ] = - 10 ad d q % ra x , % rb x je S k ip irm o v q 0x 5000, % rc x irm o v q 0x 5000, % rd x Sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x OK – so n o w w e a r e e x e c u t i n g a t t h e p l a c e w e sh o u l d h a v e b e e n e x e c u t i n g a ft e r t h e j u m p Br a n c h M i s - Pr e d i c t s ( 6 ) CP S C 3 1 3 9 ad d q % ra x , % rb x va l A =R [ % ra x ]= 10 va l B =R [ % rb x ]= - 10 va l E = va l A + va l B =0 ZF = 1 R[ % rb x ] = 0 je ski p va l C =s k i p Cn d (0 , ’ e ’ ) Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % rc x va l C = 0 x 5 0 0 0 va l E =0x 5000 Me m o r y Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % r dx va l C = 0x 5000 Ex e c u t e Me m o r y Wr i t e b a c k a ddq % rc x , % r bx De c o d e Ex e c u t e Me m o r y R[ % rc x ] = 1 , R [% rd x ] = 1 R[ % ra x ] = 1 0 , R [% rb x ] = 0 ad d q % ra x , % rb x je S k ip irm o v q 0x 5000, % rc x irm o v q 0x 5000, % rd x Sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x Bu t w h a t a b o u t t h e s e i n s t r u ct i o n s ? ? ? Ba d n e w s : Y o u h a v e s t a r t e d e x e cu t i n g tw o i n s tru c ti o n s th a t y o u s h o u l d n o t ha v e . Go o d n e w s : T h e y h a v e n ’ t m o d i f i e d a n y st a t e t h a t a n y o n e h a s “ s e e n . ” Br a n c h M i s - Pr e d i c t s ( 7 ) CP S C 3 1 3 10 ad d q % ra x , % rb x va l A =R [ % ra x ]= 10 va l B =R [ % rb x ]= - 10 va l E = va l A + va l B =0 ZF = 1 R[ % rb x ] = 0 je ski p va l C =s k i p Cn d (0 , ’ e ’ ) Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % rc x va l C = 0 x 5 0 0 0 va l E = 0x 5000 Me m o r y Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % r dx va l C = 0x 5000 Ex e c u t e Me m o r y Wr i t e b a c k a ddq % rc x , % r bx De c o d e Ex e c u t e Me m o r y R[ % rc x ] = 1 , R [% rd x ] = 1 R[ % ra x ] = 1 0 , R [% rb x ] = - 9 ad d q % ra x , % rb x je S k ip irm o v q 0x 5000, % rc x irm o v q 0x 5000, % rd x Sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x Ba d n e w s : Y o u h a v e s t a r t e d e x e cu t i n g tw o i n s tru c ti o n s th a t y o u s h o u l d n o t ha v e . Go o d n e w s : T h e y h a v e n ’ t m o d i f i e d a n y st a t e t h a t a n y o n e h a s “ s e e n . ” We w i l l c a n c e l / s q u a s h / q u a s h t h e m ! Ma k e s u r e t h a t n o v i s i b l e c h a n g e s g e t m a d e : • No w r i t e ba c k • No w r i t e s t o m e m o r y • No upda t e o f c o ndi t i o n c o de s Br a n c h Mi s - Pr e d i c t s ( 8 ) CP S C 3 1 3 11 ad d q % ra x , % rb x va l A =R [ % ra x ]= 10 va l B =R [ % rb x ]= - 10 va l E = va l A + va l B =0 ZF = 1 R[ % rb x ] = 0 je ski p va l C =s k i p Cn d (0 , ’ e ’ ) Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % rc x va l C = 0 x 5 0 0 0 va l E = 0x 5000 Me m o r y Wr i t e b a c k ir m o v q 0 x 5 0 0 0 , % r dx va l C = 0x 5000 Ex e c u t e Me m o r y Wr i t e b a c k a ddq % rc x , % r bx De c o d e Ex e c u t e Me m o r y R[ % rc x ] = 1 , R [% rd x ] = 1 R[ % ra x ] = 1 0 , R [% rb x ] = - 9 ad d q % ra x , % rb x je S k ip irm o v q 0x 5000, % rc x irm o v q 0x 5000, % rd x Sk i p : ad d q % rc x , % rb x mu l q % rd x , % ra x 9 c y c l e s /3 i n s t r u c t i o n s c o m p l e t e d = 3 C P I +1","libVersion":"0.2.1","langs":""}