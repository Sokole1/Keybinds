{"path":".obsidian/plugins/text-extractor/cache/513d59edf7bf18e436d5365e7e1ee016.json","text":"2. |8 marks| Suppose the UBC co-op office decided to use the Gale-Shapley algorithm, as presented in our worksheets, to match up n employers with n student applicants. (We will use the version where the employers are doing the asking, exactly as in the lectures/worksheets/assignment /tutorials.) However, suppose that in addition to the n real employers and applicants, there is one additional fake \"troll\" employer e; and one additional fake troll applicant a;. No one knows who the trolls are, so all employers will rank the troll applicant somewhere in their rankings, and all applicants will rank the troll employer somewhere in their rankings. The co-op office will then run the normal Gale-Shapley algorithm. At that point, though, the troll reveals itself and says \"Haha! I pranked the UBC co-op office!\" and the fake employer and applicant disappear. In the lucky scenario, the Gale-Shapley algorithm might have matched (e, a;), and no harm is done. However, it’s very likely that the Gale-Shapley algorithm matched the troll employer e; with some other applicant a,, and matched some employer e, with the troll applicant a;. (The subscript v stands for “victim”.) In this case, to avoid disturbing all the other matchings, suppose the co-op office simply “patches up” the matching by pairing up (ey, ay), and keeping everyone else matched as they were by the Gale-Shapley algorithm. For this problem, provide an instance of the Stable Matching Problem where performing the patched-up Gale-Shapley algorithm as described above yields an unstable matching. To make the problem markable, your instance must contain exactly two real employers e; and eg, and exactly two real applicants aq and ag, as well as the troll employer e; and troll applicant a;. For your answer, give complete preference lists for each employer and applicant, and briefly justify your answer by explaining what matching the Gale-Shapley algorithm will produce, what the patched-up matching will be, and why the patched-up matching is unstable.","libVersion":"0.2.1","langs":"eng"}