{"path":".obsidian/plugins/text-extractor/cache/f8578554611a5cdfadf4ee513262bf41.json","text":"2. SCENARIO #2 (what we usually think of NP-completeness as meaning): Say our reduc- tionâ€™s two algorithms take O(g(n)) time and we know that there is no algorithm for problem A that runs in O(g(n)) time. What do we know about the the running time for problem B? Why? 3. SCENARIO #3 (what NP-completeness technically means): Say that we know (which we do) that if SAT can be solved in polynomial time, then any problem in the large set called \"NP\" can also be solved in polynomial time. What does our reduction from SAT to 3-SAT tell us? Why?","libVersion":"0.2.1","langs":"eng"}