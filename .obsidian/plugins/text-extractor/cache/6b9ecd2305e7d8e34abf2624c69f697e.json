{"path":".obsidian/plugins/text-extractor/cache/6b9ecd2305e7d8e34abf2624c69f697e.json","text":"2 Data Standardization Consider the following Matlab code for loading a dataset, standardizing the features, training a model, and making predictions on a test set: % Load data {X,y, Xtest} load data.mat [n,d] = size(X); [t,”] = size(Xtest); % Standardize features mu = zeros(d,1); sigma = zeros(d,1); for j = 1:d mu(j) = mean(X(:,j)); sigma (j) = std(X(:,j)); ) ] X(:,3) = (X(:,§) — mu(}))/sigma(); end % Fit model model = fit (X,y); % Make predictions on test set ytest = model. predict (model, Xtest ); Unfortunately, there is a major error in the code above. This error causes the predictions ytest to be terrible, even though the training error is low and you don’t think that the model has overfit. (a) What is the major error in this code? (b) Give the code needed to fix the error, and where it needs to be located in the above script.","libVersion":"0.2.1","langs":"eng"}