{"path":".obsidian/plugins/text-extractor/cache/d23aa3a20b48c14798268e1809bd394d.json","text":"7.1 Simple Example Theorems In this chapter we prove a few theorems to drive home the point that ACL2 is a mathematical logic rather than just a programming language. For use in our proofs, here are some of the theorems, axioms, and definitions mentioned above. Name Axiom, Definition, or Theorem Thm1l t # nil Ax 2 x =nil = (if xy z) = 2z Ax 3 x #nil - (if xyz) =y Def not (not p) = (if p nil t) Ax 4 (car (cons x y)) = x Ax 5 (cdr (cons x y)) =y Ax 6 (consp (cons x y)) =t Thm 7 (endp x) = (not (comsp x)) Lemma 1. (endp (cons u v)) = nil.","libVersion":"0.2.1","langs":"eng"}