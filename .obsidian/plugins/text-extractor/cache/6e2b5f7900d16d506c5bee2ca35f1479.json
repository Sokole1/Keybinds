{"path":".obsidian/plugins/text-extractor/cache/6e2b5f7900d16d506c5bee2ca35f1479.json","text":"R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R R, QP2.5. y86 Pipeline Branch Prediction Choices Consider the following y86 program 1: 2: irmovq 7, %rax 3: irmovq 1, %rcx 4: irmovq 1, %rbx 5: 6: loop_start: 7: rrmovq S%rax, %rdi 8: subq %rcx, %srax 9: subq %rbx, %rdi 10: jle loop_end 11: jmp loop_start 12: 13: loop_end: 14: 15: halt Assume a pipelined implemention with no forwarding and a branch prediction algorithm that predicts never taken. For how many cycles will the pipeline stall due to hazards resulting from data dependencies? (Worth twice as much as the next part.) integer (-] How many cycles will be squashed/cancelled? integer (-] Save & Grade Single attempt Additional attempts available with new variants @","libVersion":"0.2.1","langs":"eng"}