{"path":".obsidian/plugins/text-extractor/cache/b7a461d9c76609583e0d6bdc3cf9ccde.json","text":"(oe10T3] i T WO Tel oW\\ [[-1 For a 8KB (8192 bytes) direct-mapped cache with 128-byte blocks, consider the following code snippet. #define SIZE 257 uint64_t A[SIZE]; //uint64_t is 8 bytes uint64_t total = 0; for (int i = 0; i < 2; i++) { for (int j = 0; j < SIZE; j += 8) { total += A[j]; } } For this question, consider accesses to array A, only. Assume array A is allocated starting at address 0x200000000. Assume no elements of A are in the cache when the code begins running for each part below. How many misses (on array A) will this code produce? integer e If we change the array to contain 1296 elements, how many misses (on array A) will this code produce? integer e If we change the array to contain 4720 elements, how many misses (on array A) will this code produce? integer ()","libVersion":"0.2.1","langs":"eng"}