{"path":".obsidian/plugins/text-extractor/cache/c74df1982858305e923dd8429b3f9a07.json","text":"Consider the following y86 program 1: 2: irmovq 1, %rax 3: irmovq 14, S%rbx 4: irmovq 1, %rcx 5: 6: loop_start: 7: rrmovq %rax, %rdi 8: addq %rcx, %rax 9: rrmovq %rbx, S%rbp 10: subq %rdi, S%rbp 11: jg loop_start 12: 13: loop_end: 14: xorq %r9, %rile 15: rrmovq %rl3, %r9 16: subq %rcx, %r9 17: popq %ril2 18: Assume a pipelined implemention with no forwarding and a branch prediction algorithm that predicts taken for backward branches and not taken for forward branches. For how many cycles will the pipeline stall due to hazards resulting from data dependencies? integer (~) How many cycles will be squashed/cancelled? integer e","libVersion":"0.2.1","langs":"eng"}