{"path":".obsidian/plugins/text-extractor/cache/11f89aca093c3f034cf1bea4e8b2d193.json","text":"1 Training/Validation/Testing You are asked by a client to build a system that solves a regression problem. They give you 3000 training examples and a set of 100 features for each example. You have been assured that the examples have been generated in way that makes them IID, and the examples have been given to you sorted based on the values of the first feature. The client not only wants an accurate model, but they want an unbiased estimate of the accuracy of the final model. Assume that the data is stored in a 3000 by 100 matrix X, and the targets are stored in a 3000 by 1 vector y. Assume that you have a ‘model’ function that depends on two parameters k; and ky with the following interface: e model = train(X,y,k1,k2); % Train model on {X,y} with hyper-parameters k; and k. e yhat = predict(model,Xhat); % Predicts using the model on X hat. Assume that the two parameters k; and ko can take any integer value from 1 to 5. Give pseudo-code for a training/validation/testing procedure that chooses good values of k; and k3, and then reports an unbiased estimate of the accuracy of the final model.","libVersion":"0.2.1","langs":"eng"}