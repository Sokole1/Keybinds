{"path":".obsidian/plugins/text-extractor/cache/bc2b8c4316df142c2fa87874fb45e6dd.json","text":"Math 318 Solutions to Assignment #9 1. (a) Draw the transition diagram. Not irreducible. Classes are {0}, {1, 2}, {3, 4, 5}. States 3,4,5 are recurrent; 0,1,2 are transient; 1,2 have period 2; 0,3,4,5 are aperiodic. (b) It can return to state 5 in 4 steps only by following the sequences: 55555, 55345 and 53455. This ﬁrst has probability 1 3 1 3 1 3 1 3 . The second and third each have probability 1 3 × 2 3 × 1 × 1, so the total probability is 37 81 . (c) Irreducible. Recurrent for d = 1, 2; transient for d ≥ 3. Periodic with period 2. (d) Not irreducible. Classes are {0}, {1, 2, 3, . . .}. State 0 is recurrent and absorbing. The others are transient because for each i > 0 there is a chance of no oﬀspring for the next generation, so Pi0 > 0 and thus there is a positive probability that starting from i the chain will not return to state i. 2. The state space is {0, 1, . . . , d}. Clearly Pij = 0 unless j = i, i ± 1. Also Pii = P (both balls same colour) = d − i d · i d + i d · d − i d = 2(d − i)i d2 (i = 0, 1, . . . , d), where we have considered the two possibilities “both white” and “both black,” and similarly Pi,i+1 = P (white from 1 and black from 2) = d − i d · d − i d = ( d − i d )2 (i = 0, 1, . . . , d), Pi,i−1 = P (black from 1 and white from 2) = i d · i d = ( i d )2 (i = 0, 1, . . . , d). 3. This is a 2-state Markov chain with states S, R and transition matrix P = ( 1 6 5 6 1 4 3 4 ) . The stationary distribution is (πS, πR) = ( 1 4 1 4 + 5 6 , 5 6 1 4 + 5 6 ) = ( 3 13 , 10 13 ), so the fraction of rainy days is 10 13 . 4. The transition matrix is P = C A C 0.9 0.1 A 1 0 so the stationary distribution is π = [ 10 11 , 1 11 ]. The fraction of trips that originate in the city is πC = 10 11 and the fraction of those trips that go to the airport is πCPCA = 1 11 . Smith’s expected proﬁt per trip is 8πCPCC + 12(πCPCA + πAPAC) = 8 × 9 11 + 12 × ( 1 11 + 1 11 ) = 96 11 . 5. (a) After the coins have been ﬂipped many times, each should be equally likely to be either heads or tails, so the stationary distribution should be Bin(n, 1 2 ), i.e., πi = (n i )2 −n for i = 0, 1, . . . , n. To verify this, it suﬃces to show that πiPij = πjPji for all i, j, and this will follow if it holds for j = i + 1. Thus it suﬃces to check that (n i ) 1 2n n − i 2n = ( n i + 1 ) 1 2n i + 1 2n , which is easily seen to be true. 1 (b) function y = nextStepEhr(X,M) # First check if the chain stays in place or not U = rand(); if U < 1/2 y = X; # Now treat the case in which it changes position else V = rand(); if V < X/M y = X-1; else y = X+1; end end (c) X = 0; # Run the chain for 10000 time steps for i=1:10000 X = nextStepEhr(X, 1000); end # Create vector y to store number of visits to each state y = zeros(1,1001); # Run the chain for 60000 more steps for i=1:60000 y(X+1) = y(X+1) + 1; X = nextStepEhr(X,1000); end x = [1:1001]; bar(x,y) xlabel(’States of chain’); ylabel(’Time spent in state’); print -dpng ehrBar.png; Your solution will be random since it involves simulations. Running the above code produced the following plot: , which resembles the p.m.f. of the Bin(1000, 1 2 ) stationary distribution: 2 (d) A = matrixEhr(20); mu = zeros(1,21); mu(1,1) = 1; for k = 1:60 F(k,:)=mu*(A^k); end mesh(F) xlabel(’States of chain’); ylabel(’Time’); zlabel(’p.m.f.’) print -dpng ehr3d1.png; nu = zeros(1,21); nu(1,1) = 1/2; nu(1,21) = 1/2; for k = 1:60 G(k,:)=nu*(A^k); end 3 mesh(G) xlabel(’States of chain’); ylabel(’Time’); zlabel(’p.m.f.’) print -dpng ehr3d2.png; Running the above code produced the following plot for µ (after rotation): and the following plot for ν (after rotation): 4","libVersion":"0.2.1","langs":""}