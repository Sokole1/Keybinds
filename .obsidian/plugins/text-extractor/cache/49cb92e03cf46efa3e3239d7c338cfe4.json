{"path":".obsidian/plugins/text-extractor/cache/49cb92e03cf46efa3e3239d7c338cfe4.json","text":"Question 1.37 Let s st= o) (@i-2)% i=1 and PEEE P 2= i . =1 (a) Computing s? requires n subtractions, n multiplications (squares), n — 1 additions and one division by n. So the total number of operations is 3n. On the other hand, computing s2 requires n multiplications for squaring z;, n — 1 additions, one multiplication for squaring Z and one subtraction. So the total here is 2n + 1. Hence s3 is cheaper to compute. (b) We expect s to give more accurate results in general. In s, two large numbers are subtracted. There are two possible problems here. The first is that squaring larger numbers may cause loss of accuracy (least significant digits are lost), and even overflow. The second is that subtraction of larger numbers causes more severe cancellation errors. (c) Try to think of a small example here of three numbers in single precision.","libVersion":"0.2.1","langs":"eng"}