{"path":".obsidian/plugins/text-extractor/cache/df3b7ce65a3d838f11d87e40a9d8f863.json","text":"Midterm Exam 1 Solution, CPSC 302, Fall 2012 1. (a) f=sqrt(x.^2+0.01)-sqrt(x.^2-0.01); (b) i. x3 (overﬂow is triggered for both quantities and the ﬁnal result of the computation is in fact NaN) ii. x2 iii. We write f (x) = √x2 + 0.01 − √x2 − 0.01 = (√ x2 + 0.01 − √x2 − 0.01) · √ x2 + 0.01 + √ x2 − 0.01 √ x2 + 0.01 + √ x2 − 0.01 = 0.02 √x2 + 0.01 + √ x2 − 0.01 = 0.02 |x| (√1 + 0.01 x2 + √ 1 − 0.01 x2 ) ≈ 0.01 |x| . The expression in the third row is better suited to deal with cancellation errors. In the fourth row we factor out |x| to avoid overﬂow in the overall results of the computations of the square roots. In the last row we get rid of the small number 1 x2 and avoid the overﬂow triggered by computing x2. (It would have been harmless because x2 would have been set to Inf and then 1 x2 would have been set to 0. Nonetheless, an overﬂow would have been triggered.) The computation in the last row is economical in terms of avoiding square root. For large values of x, where those numerical diﬃculties occur, the number we have neglected in transition to the last expression would not have aﬀected the computation anyway. 2. (a) i. The function f (x) = x · (x − 1) 2 is continuous because it’s a simple polynomial, and since (x − 1) 2 is nonnegative, the sign of f (x) is determined by the sign of x. Thus, f (a) < 0 for a = −1 < 0 and f (b) > 0 for b = 2 > 0. Hence the two conditions for bisection, namely f continuous and f (a) · f (b) < 0 for the initial interval [a, b], are satisﬁed. 1 ii. The correct answer is: A. it will converge to x∗(1) = 0. The ﬁrst iteration will land us on p = a+b 2 = 0.5 and since f (0.5) > 0 by the same argument as in (a), the new iterval is [−1, 0.5]. We now have only one root in the interval and we will converge to it. (b) i. ‹ ek in Table 1 refers to e (1) k and ek in Table 2 refers to e (2) k ii. ‹ Convergence to the root x∗(1) = 0 is quadratic ‹ Convergence to the root x∗(2) = 1 is linear A simple way to see it is that f ′(0) ̸= 0 and f ′(1) = 0. That is, x∗(1) = 0 is a simple root and x∗(2) = 1 is a multiple root. 3. (a) xk+1 = xk − e √xk −a( e√ xk 2√ xk ) (b) xk+1 = xk − 2 √ xk (1 − ae − √xk ) (c) i. ONE (one call to the exponential function exp) ii. ONE (one call to the square root function sqrt) If the code is as eﬃcient as possible, we try to minimize the most expensive component, namely number of function evaluations. We thus can set zk = √ xk and then xk+1 = xk − 2zk(1 − ae −zk). 2","libVersion":"0.2.1","langs":""}