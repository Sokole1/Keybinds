{"path":".obsidian/plugins/text-extractor/cache/d20feb0bbf7d93ca2763fed3d1f2de6d.json","text":"QP3.6. Counting Cache Misses For a 8KB (8192 bytes) direct-mapped cache with 32-byte blocks, consider the following code snippet. #define SIZE 1763 int A[SIZE]; //int is 4 bytes int total = 0; for (int i = 0; i < 4; i++) { for (int j = 0; j < SIZE; j += 2) { total += A[j]; } Â¥ For this question, consider accesses to array A, only. Assume array A is allocated starting at address 0x200000000. Assume no elements of A are in the cache when the code begins running for each part below. How many misses (on array A) will this code produce? integer (-] If we change the array to contain 2736 elements, how many misses (on array A) will this code produce? integer o If we change the array to contain 6936 elements, how many misses (on array A) will this code produce? integer (-] Save & Grade Single attempt Additional attempts available with new variants @","libVersion":"0.2.1","langs":"eng"}